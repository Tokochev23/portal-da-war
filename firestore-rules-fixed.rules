rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // ===== Helpers =====
    function isLoggedIn() {
      return request.auth != null;
    }

    function isStaff() {
      return isLoggedIn() &&
             exists(/databases/$(database)/documents/usuarios/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/usuarios/$(request.auth.uid)).data.papel in ['narrador', 'admin'];
    }

    // Safer getter for owner/player comparison when a doc may not exist yet (create)
    function newPlayerId() {
      return request.resource.data.playerId;
    }
    function curPlayerId() {
      return resource.data.playerId;
    }

    // ===== PAÍSES =====
    match /paises/{document} {
      allow read: if true;
      allow write: if isLoggedIn();
    }

    // ===== USUÁRIOS =====
    match /usuarios/{userId} {
      // Permitir que o próprio usuário leia/escreva seus dados
      allow read, write: if isLoggedIn() && request.auth.uid == userId;
      
      // CORREÇÃO: Permitir que staff (narradores/admins) leiam todos os usuários
      // para gerenciamento de jogadores
      allow read: if isStaff();
      
      // Permitir que staff atualize dados de usuários (atribuições de país, etc.)
      allow write: if isStaff();
    }

    // ===== CONFIGURAÇÕES =====
    match /configuracoes/{document} {
      allow read: if true;
      allow write: if isLoggedIn();
    }

    // ===== HISTÓRICO DE MUDANÇAS =====
    match /change_history/{document} {
      // Staff pode ler/escrever histórico para auditoria
      allow read, write: if isStaff();
      
      // Usuários podem ler histórico de seus próprios países
      allow read: if isLoggedIn() && resource.data.keys().hasAny(['userId']) && request.auth.uid == resource.data.userId;
    }

    // ===== SISTEMA DE VEÍCULOS =====

    // --- Veículos pendentes de aprovação ---
    match /vehicles_pending/{docId} {
      // Players podem criar seus próprios veículos pendentes
      allow create: if isLoggedIn()
        && request.resource.data.keys().hasAll(['playerId'])
        && request.auth.uid == newPlayerId();

      // Ler: dono do veículo pendente ou staff
      allow read: if isLoggedIn()
        && (
          (resource.data.keys().hasAny(['playerId']) && request.auth.uid == curPlayerId()) ||
          isStaff()
        );

      // Atualizar / apagar: somente staff (para aprovar/recusar)
      allow update, delete: if isStaff();
    }

    // --- Inventário de veículos aprovados (organizado por player) ---
    match /vehicles_approved/{playerId}/{documents=**} {
      // Ler: o próprio player ou staff
      allow read: if isLoggedIn()
        && (request.auth.uid == playerId || isStaff());

      // Escrever (criar/atualizar/apagar): somente staff (aprovação/movimentações)
      allow write: if isStaff();
    }

    // --- Veículos rejeitados (histórico) ---
    match /vehicles_rejected/{docId} {
      // Criar registro de rejeição: somente staff
      allow create: if isStaff();

      // Ler: dono (via campo playerId) ou staff
      allow read: if isLoggedIn()
        && (
          (resource.data.keys().hasAny(['playerId']) && request.auth.uid == resource.data.playerId) ||
          isStaff()
        );

      // Atualizar / apagar: somente staff
      allow update, delete: if isStaff();
    }

    // --- Inventário (por país) ---
    // Se o documento do inventário tiver um campo ownerUid, ele controla acesso do "dono" do país
    // Caso contrário, apenas staff conseguirá ler/escrever.
    match /inventory/{countryId}/{documents=**} {
      allow read: if isLoggedIn()
        && (
          (resource.data.keys().hasAny(['ownerUid']) && request.auth.uid == resource.data.ownerUid) ||
          isStaff()
        );

      // Escrita no inventário: somente staff (para evitar manipulação direta pelos players)
      allow write: if isStaff();
    }

    // ===== ANÚNCIOS/NOTIFICAÇÕES =====
    match /announcements/{document} {
      // Todos podem ler anúncios
      allow read: if isLoggedIn();
      
      // Somente staff pode criar/editar/deletar anúncios
      allow write: if isStaff();
    }

    // ===== LOGS DE SISTEMA =====
    match /system_logs/{document} {
      // Somente staff pode acessar logs
      allow read, write: if isStaff();
    }
  }
}