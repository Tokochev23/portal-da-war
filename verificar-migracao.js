/**
 * Script para verificar e corrigir migra√ß√£o PIB per capita
 * Execute no console do narrador.html
 */

async function verificarMigracao() {
    console.log('üîç Verificando migra√ß√£o PIB per capita...');
    
    try {
        // Buscar Afeganist√£o especificamente
        const afegDoc = await db.collection('paises').doc('afeganistao').get();
        const afeganistao = afegDoc.data();
        
        console.log('üìä Dados atuais do Afeganist√£o:');
        console.log('- PIB Total:', afeganistao?.PIB?.toLocaleString() || 'N√£o definido');
        console.log('- PIB per Capita:', afeganistao?.PIBPerCapita?.toLocaleString() || 'N√£o definido');
        console.log('- Popula√ß√£o:', afeganistao?.Populacao?.toLocaleString() || 'N√£o definido');
        console.log('- Migrado em:', afeganistao?._migradoEm || 'N√£o migrado');
        
        // Se n√£o tem PIB per capita, fazer migra√ß√£o manual
        if (!afeganistao?.PIBPerCapita && afeganistao?.PIB && afeganistao?.Populacao) {
            console.log('‚ö†Ô∏è Afeganist√£o precisa de migra√ß√£o manual...');
            
            const pibPerCapita = afeganistao.PIB / afeganistao.Populacao;
            
            await db.collection('paises').doc('afeganistao').update({
                PIBPerCapita: pibPerCapita,
                _migradoEm: new Date(),
                _migracaoManual: true
            });
            
            console.log(`‚úÖ Migra√ß√£o manual conclu√≠da! PIB per capita: $${pibPerCapita.toFixed(2)}`);
            
            // Recarregar p√°gina
            setTimeout(() => {
                console.log('üîÑ Recarregando para aplicar mudan√ßas...');
                location.reload();
            }, 2000);
        }
        
        // Verificar outros pa√≠ses
        const snapshot = await db.collection('paises').limit(5).get();
        let semPIBPerCapita = 0;
        
        snapshot.docs.forEach(doc => {
            const country = doc.data();
            if (!country.PIBPerCapita && country.PIB && country.Populacao) {
                semPIBPerCapita++;
                console.log(`‚ùå ${country.Pais || doc.id}: sem PIB per capita`);
            }
        });
        
        if (semPIBPerCapita > 0) {
            console.log(`‚ö†Ô∏è ${semPIBPerCapita} pa√≠ses ainda precisam de migra√ß√£o`);
            console.log('üí° Execute migrarTodosOsPaises() para migrar todos de uma vez');
        } else {
            console.log('üéâ Todos os pa√≠ses verificados t√™m PIB per capita!');
        }
        
    } catch (error) {
        console.error('üí• Erro na verifica√ß√£o:', error);
    }
}

async function migrarTodosOsPaises() {
    console.log('üöÄ Migrando todos os pa√≠ses...');
    
    try {
        const { calculatePIBPerCapita } = await import('./js/utils/pibCalculations.js');
        const snapshot = await db.collection('paises').get();
        
        let migrados = 0;
        const batch = db.batch();
        
        snapshot.docs.forEach(doc => {
            const country = doc.data();
            const pib = parseFloat(country.PIB) || 0;
            const populacao = parseFloat(country.Populacao) || 0;
            const pibPerCapitaAtual = parseFloat(country.PIBPerCapita) || 0;
            
            // Se precisa de migra√ß√£o
            if (!pibPerCapitaAtual && pib > 0 && populacao > 0) {
                const pibPerCapita = calculatePIBPerCapita(pib, populacao);
                
                batch.update(doc.ref, {
                    PIBPerCapita: pibPerCapita,
                    _migradoEm: new Date(),
                    _migracaoCompleta: true
                });
                
                console.log(`üìù ${country.Pais || doc.id}: $${pibPerCapita.toFixed(2)}`);
                migrados++;
            }
        });
        
        if (migrados > 0) {
            await batch.commit();
            console.log(`‚úÖ ${migrados} pa√≠ses migrados com sucesso!`);
            
            setTimeout(() => {
                console.log('üîÑ Recarregando p√°gina...');
                location.reload();
            }, 2000);
        } else {
            console.log('‚ÑπÔ∏è Nenhum pa√≠s precisava de migra√ß√£o');
        }
        
    } catch (error) {
        console.error('üí• Erro na migra√ß√£o completa:', error);
    }
}

// Executar verifica√ß√£o automaticamente
if (typeof db !== 'undefined') {
    console.log('üîç Iniciando verifica√ß√£o em 2 segundos...');
    setTimeout(verificarMigracao, 2000);
} else {
    console.log('‚ö†Ô∏è Firebase n√£o detectado. Execute verificarMigracao() ap√≥s carregar o narrador.');
}

// Exportar fun√ß√µes para uso manual
window.verificarMigracao = verificarMigracao;
window.migrarTodosOsPaises = migrarTodosOsPaises;