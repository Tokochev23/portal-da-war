import{L as M}from"./firebase-DhoRyF0N.js";const n={BASE_PRODUCTION_PER_MILLION:{Graos:200,Combustivel:20,Metais:15,Carvao:25,Energia:80},DEVELOPMENT_MULTIPLIERS:{ultraDeveloped:{threshold:2e3,multiplier:3},highlyDeveloped:{threshold:1200,multiplier:2.5},developed:{threshold:800,multiplier:2},moderate:{threshold:500,multiplier:1.5},developing:{threshold:200,multiplier:1},underdeveloped:{multiplier:.6}},URBANIZATION_MODIFIERS:{Combustivel:.015,Metais:.012,Energia:.02,Graos:-.012},GRAIN_PRODUCTION_FACTORS:{RURAL_PRODUCTIVITY_BASE:250,TECHNOLOGY_EFFICIENCY:.025,DEVELOPMENT_BONUS:.001},TECHNOLOGY_MULTIPLIERS:{Graos:.015,Combustivel:.02,Metais:.018,Carvao:.012,Energia:.025},GEOGRAPHIC_MODIFIERS:{oil_rich:{countries:["Venezuela","Arábia Saudita","Kuwait","Iraque","Estados Unidos","URSS","Irã"],modifier:{Combustivel:2.5}},coal_rich:{countries:["Estados Unidos","Reino Unido","Alemanha","URSS","China","Polônia"],modifier:{Carvao:2}},mineral_rich:{countries:["Estados Unidos","URSS","Canadá","Austrália","Brasil","África do Sul"],modifier:{Metais:1.8}},agricultural:{countries:["Estados Unidos","URSS","Argentina","Brasil","Canadá","Austrália","França","Ucrânia"],modifier:{Graos:1.8}},super_agricultural:{countries:["URSS","Estados Unidos"],modifier:{Graos:2.2}},industrialized:{countries:["Estados Unidos","Reino Unido","Alemanha","França","URSS","Japão"],modifier:{Energia:1.4}}},CLIMATE_PRODUCTION_MODIFIERS:{cold:{Graos:.8,Energia:1.2},temperate:{Graos:1,Energia:1},warm:{Graos:1.1,Energia:.9},hot:{Graos:.7,Energia:.8}}},C={cold:["URSS","Canadá","Finlândia","Suécia","Noruega","Islândia","Dinamarca","Polônia","Tchecoslováquia","Mongólia"],temperate:["Estados Unidos","Reino Unido","França","Alemanha","Itália","Espanha","Portugal","Holanda","Bélgica","Suíça","Áustria","Hungria","Romênia","Bulgária","Iugoslávia","Coreia do Sul","Coreia do Norte","Japão","China","Argentina","Chile","Uruguai"],warm:["Brasil","México","Venezuela","Colômbia","Equador","Peru","Bolívia","Paraguai","Guatemala","Cuba","Índia","Paquistão","Bangladesh","Birmânia","Tailândia","Vietnã","Filipinas","Indonésia","Malásia","Turquia","Síria","Líbano","Israel","Jordânia","Irã","Afeganistão","Marrocos","Argélia","Tunísia"],hot:["Arábia Saudita","Kuwait","Iraque","Líbia","Egito","Sudão","Etiópia","Quênia","Tanzânia","Somália","Chade","Nigéria","Mali","Níger","Austrália","Sri Lanka","Emirados Árabes Unidos"]};class R{static calculateCountryProduction(a){try{const e=parseFloat(a.Populacao)||1,o=parseFloat(a.PIBPerCapita)||500,l=parseFloat(a.Urbanizacao)||30,t=parseFloat(a.Tecnologia)||20,i=a.Pais||a.Nome||"Desconhecido",c=this.calculateBaseProduction(e),r=this.getDevelopmentMultiplier(o),h=this.calculateUrbanizationModifiers(l),u=this.calculateTechnologyModifiers(t),g=this.getGeographicModifiers(i),p=this.getClimateProductionModifiers(i),d={},m=this.calculateGrainProduction(a);return d.Graos=m.production,["Combustivel","Metais","Carvao","Energia"].forEach(s=>{let E=c[s]*r;h[s]&&(E*=h[s]),u[s]&&(E*=u[s]),g[s]&&(E*=g[s]),p[s]&&(E*=p[s]),d[s]=Math.round(E)}),d._metadata={calculatedAt:new Date().toISOString(),countryName:i,population:Math.round(e),pibPerCapita:Math.round(o),developmentLevel:this.getDevelopmentLevel(o),climateZone:this.getClimateZone(i),devMultiplier:r,geographicBonuses:this.getCountryGeographicBonuses(i),grainDetails:m.metadata},d}catch(e){return M.error("Erro ao calcular produção:",e),this.getDefaultProduction()}}static calculateBaseProduction(a){const e=a/1e6,o=n.BASE_PRODUCTION_PER_MILLION;return{Graos:Math.round(o.Graos*e),Combustivel:Math.round(o.Combustivel*e),Metais:Math.round(o.Metais*e),Carvao:Math.round(o.Carvao*e),Energia:Math.round(o.Energia*e)}}static calculateGrainProduction(a){const e=parseFloat(a.Populacao)||1,o=parseFloat(a.Urbanizacao)||30,l=parseFloat(a.Tecnologia)||20,t=parseFloat(a.PIBPerCapita)||500,i=a.Pais||a.Nome||"Desconhecido",c=Math.max(10,100-o),r=e*c/100/1e6,h=n.GRAIN_PRODUCTION_FACTORS;let u=r*h.RURAL_PRODUCTIVITY_BASE;const g=1+h.TECHNOLOGY_EFFICIENCY*l;u*=g;const p=1+h.DEVELOPMENT_BONUS*t;u*=p;const d=this.getGeographicModifiers(i);d.Graos&&(u*=d.Graos);const m=this.getClimateProductionModifiers(i);return m.Graos&&(u*=m.Graos),{production:Math.round(u),metadata:{ruralPopulationPercent:Math.round(c),ruralPopulationMillions:Math.round(r*100)/100,technologyMultiplier:Math.round(g*100)/100,developmentBonus:Math.round(p*100)/100,geographicBonus:d.Graos||1,climateEffect:m.Graos||1}}}static getDevelopmentMultiplier(a){const e=n.DEVELOPMENT_MULTIPLIERS;return a>=e.ultraDeveloped.threshold?e.ultraDeveloped.multiplier:a>=e.highlyDeveloped.threshold?e.highlyDeveloped.multiplier:a>=e.developed.threshold?e.developed.multiplier:a>=e.moderate.threshold?e.moderate.multiplier:a>=e.developing.threshold?e.developing.multiplier:e.underdeveloped.multiplier}static getDevelopmentLevel(a){const e=n.DEVELOPMENT_MULTIPLIERS;return a>=e.ultraDeveloped.threshold?"Ultra Desenvolvido":a>=e.highlyDeveloped.threshold?"Muito Desenvolvido":a>=e.developed.threshold?"Desenvolvido":a>=e.moderate.threshold?"Moderado":a>=e.developing.threshold?"Em Desenvolvimento":"Subdesenvolvido"}static calculateUrbanizationModifiers(a){const e=n.URBANIZATION_MODIFIERS;return{Combustivel:1+e.Combustivel*a,Metais:1+e.Metais*a,Energia:1+e.Energia*a,Graos:1+e.Graos*a}}static calculateTechnologyModifiers(a){const e=n.TECHNOLOGY_MULTIPLIERS;return{Graos:1+e.Graos*a,Combustivel:1+e.Combustivel*a,Metais:1+e.Metais*a,Carvao:1+e.Carvao*a,Energia:1+e.Energia*a}}static getGeographicModifiers(a){const e={Graos:1,Combustivel:1,Metais:1,Carvao:1,Energia:1},o=n.GEOGRAPHIC_MODIFIERS;return["oil_rich","coal_rich","mineral_rich","agricultural","super_agricultural","industrialized"].forEach(t=>{const i=o[t];i&&i.countries.includes(a)&&Object.entries(i.modifier).forEach(([c,r])=>{e[c]=r})}),e}static getCountryGeographicBonuses(a){const e=[],o=n.GEOGRAPHIC_MODIFIERS;return Object.entries(o).forEach(([l,t])=>{if(t.countries.includes(a)){const i={oil_rich:"Rico em Petróleo",coal_rich:"Rico em Carvão",mineral_rich:"Rico em Minerais",agricultural:"Agrícola",industrialized:"Industrializado"};e.push(i[l]||l)}}),e}static getClimateProductionModifiers(a){const e=this.getClimateZone(a);return n.CLIMATE_PRODUCTION_MODIFIERS[e]||n.CLIMATE_PRODUCTION_MODIFIERS.temperate}static getClimateZone(a){for(const[e,o]of Object.entries(C))if(o.includes(a))return e;return"temperate"}static getDefaultProduction(){return{Graos:100,Combustivel:50,Metais:30,Carvao:40,Energia:80,_metadata:{calculatedAt:new Date().toISOString(),error:"Valores padrão aplicados devido a erro no cálculo"}}}static calculateResourceBalance(a){const e=this.calculateCountryProduction(a);return{Graos:e.Graos-(parseFloat(a.ConsumoGraos)||0),Combustivel:e.Combustivel-(parseFloat(a.ConsumoCombustivel)||0),Metais:e.Metais-(parseFloat(a.ConsumoMetais)||0),Carvao:e.Carvao-(parseFloat(a.ConsumoCarvao)||0),Energia:e.Energia-(parseFloat(a.ConsumoEnergia)||0)}}static generateProductionReport(a){const e=this.calculateCountryProduction(a),o=this.calculateResourceBalance(a),l=a.Pais||a.Nome||"Desconhecido",t=[],i=[];return Object.entries(o).forEach(([c,r])=>{r>100&&t.push(c),r<-50&&i.push(c)}),{country:l,production:e,balance:o,summary:{totalProduction:e.Graos+e.Combustivel+e.Metais+e.Carvao,surplusResources:t,deficitResources:i,energyBalance:o.Energia>0?"Superávit":"Déficit"},analysis:{economicLevel:e._metadata.developmentLevel,geographicBonuses:e._metadata.geographicBonuses,climateZone:e._metadata.climateZone}}}}export{R};
