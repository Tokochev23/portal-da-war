import{db as h}from"./firebase-ep1w8F7T.js";import{L as m}from"./utils-DLoRv3re.js";class N{static INCOME_CATEGORIES={MARKETPLACE_SALES:"marketplaceSales",RESOURCE_SALES:"resourceSales",LOAN_RECEIVED:"loanReceived",SUBSIDIES:"subsidies",FOREIGN_AID:"foreignAid",TAX_INCOME:"taxIncome",OTHER_INCOME:"otherIncome"};static EXPENSE_CATEGORIES={EXISTING_EXPENSES:"existingExpenses",MARKETPLACE_PURCHASES:"marketplacePurchases",RESOURCE_PURCHASES:"resourcePurchases",AGENCY_BUDGET:"agencyBudget",AGENCY_RESEARCH:"agencyResearch",VEHICLE_MAINTENANCE:"vehicleMaintenance",DIVISION_MAINTENANCE:"divisionMaintenance",FLEET_MAINTENANCE:"fleetMaintenance",SHIPYARD_MAINTENANCE:"shipyardMaintenance",INFRASTRUCTURE:"infrastructureCosts",MILITARY_PRODUCTION:"militaryProduction",LOAN_PAYMENTS:"loanPayments",CONSUMER_GOODS:"consumerGoods",OTHER_EXPENSES:"otherExpenses"};static calculateBase(e){const c=parseFloat(e.PIB)||0,u=(parseFloat(e.Burocracia)||0)/100,d=(parseFloat(e.Estabilidade)||0)/100,p=c*.25*u*(d*1.5);return{pib:c,burocracia:u,estabilidade:d,calculated:p}}static async initializeTurn(e,c){try{m.info(`Inicializando budget breakdown para ${e}`);const u=this.calculateBase(c),d=parseFloat(c.OrcamentoGasto||0),p={};d>0&&(p[this.EXPENSE_CATEGORIES.EXISTING_EXPENSES]=d);const b=d,f={base:u,additions:{},subtractions:{...p,total:b},available:u.calculated-b,lastUpdated:new Date().toISOString(),turnInitialized:!0};return await h.collection("paises").doc(e).update({budgetBreakdown:f}),m.info(`Budget breakdown inicializado: ${e} - Base: $${(u.calculated/1e6).toFixed(2)}M - Despesas Existentes: $${(b/1e6).toFixed(2)}M`),f}catch(u){throw m.error(`Erro ao inicializar budget breakdown para ${e}:`,u),u}}static async addIncome(e,c,u,d=""){try{if(u<=0){m.warn(`Tentativa de adicionar receita negativa/zero: ${e} - ${c} - ${u}`);return}const p=window.firebase.firestore.FieldValue.increment(u);await h.collection("paises").doc(e).update({[`budgetBreakdown.additions.${c}`]:p,"budgetBreakdown.lastUpdated":new Date().toISOString()}),m.info(`üí∞ Receita adicionada: ${e} - ${c} - +$${(u/1e6).toFixed(2)}M - ${d}`),await this.recalculate(e)}catch(p){throw m.error(`Erro ao adicionar receita para ${e}:`,p),p}}static async addExpense(e,c,u,d=""){try{if(u<=0){m.warn(`Tentativa de adicionar despesa negativa/zero: ${e} - ${c} - ${u}`);return}const p=window.firebase.firestore.FieldValue.increment(u);await h.collection("paises").doc(e).update({[`budgetBreakdown.subtractions.${c}`]:p,"budgetBreakdown.lastUpdated":new Date().toISOString()}),m.info(`üí∏ Despesa adicionada: ${e} - ${c} - -$${(u/1e6).toFixed(2)}M - ${d}`),await this.recalculate(e)}catch(p){throw m.error(`Erro ao adicionar despesa para ${e}:`,p),p}}static async recalculate(e){try{const c=await h.collection("paises").doc(e).get();if(!c.exists){m.error(`Pa√≠s n√£o encontrado: ${e}`);return}const u=c.data(),d=u.budgetBreakdown||{};if(!d.turnInitialized){await this.initializeTurn(e,u);return}const p=Object.entries(d.additions||{}).filter(([E])=>E!=="total").reduce((E,[M,g])=>E+(parseFloat(g)||0),0),b=Object.entries(d.subtractions||{}).filter(([E])=>E!=="total").reduce((E,[M,g])=>E+(parseFloat(g)||0),0),f=(d.base?.calculated||0)+p-b;await h.collection("paises").doc(e).update({"budgetBreakdown.additions.total":p,"budgetBreakdown.subtractions.total":b,"budgetBreakdown.available":f,"budgetBreakdown.lastUpdated":new Date().toISOString()}),m.info(`‚úÖ Budget recalculado: ${e} - Dispon√≠vel: $${(f/1e6).toFixed(2)}M`)}catch(c){throw m.error(`Erro ao recalcular budget para ${e}:`,c),c}}static async getBreakdown(e){try{const c=await h.collection("paises").doc(e).get();if(!c.exists)throw new Error(`Pa√≠s n√£o encontrado: ${e}`);return c.data().budgetBreakdown||null}catch(c){throw m.error(`Erro ao obter breakdown de ${e}:`,c),c}}static getCategoryLabel(e){return{marketplaceSales:"üíµ Vendas Marketplace",resourceSales:"üõ¢Ô∏è Vendas de Recursos",loanReceived:"üè¶ Empr√©stimos Recebidos",subsidies:"üí∞ Subs√≠dios",foreignAid:"üåç Ajuda Externa",taxIncome:"üìä Receita Tribut√°ria",otherIncome:"üíº Outras Receitas",existingExpenses:"üè≠ Produ√ß√£o e Opera√ß√µes",marketplacePurchases:"üõí Compras Marketplace",resourcePurchases:"üõ¢Ô∏è Compras de Recursos",agencyBudget:"üïµÔ∏è Or√ßamento Ag√™ncias",agencyResearch:"üî¨ Pesquisa de Ag√™ncia",vehicleMaintenance:"üöó Manuten√ß√£o Ve√≠culos",divisionMaintenance:"üéñÔ∏è Manuten√ß√£o Divis√µes",fleetMaintenance:"‚öì Manuten√ß√£o Frotas",shipyardMaintenance:"üè≠ Manuten√ß√£o Estaleiros",infrastructureCosts:"üèóÔ∏è Infraestrutura",militaryProduction:"‚öîÔ∏è Produ√ß√£o Militar",loanPayments:"üè¶ Pagamento Empr√©stimos",consumerGoods:"üõçÔ∏è Bens de Consumo",otherExpenses:"üí∏ Outras Despesas"}[e]||e}static formatCurrency(e){if(e===0||!e)return"$0";const c=e/1e6;return c>=1e3?`$${(c/1e3).toFixed(2)}B`:c>=1?`$${c.toFixed(2)}M`:e>=1e3?`$${(e/1e3).toFixed(0)}k`:`$${e.toFixed(0)}`}static async getBreakdown(e){try{const c=await h.collection("paises").doc(e).get();return c.exists?c.data().budgetBreakdown||null:(console.error("Pa√≠s n√£o encontrado:",e),null)}catch(c){return console.error("Erro ao buscar breakdown:",c),null}}static generateReport(e){if(!e)return{base:0,additions:[],subtractions:[],available:0};const c=Object.entries(e.additions||{}).filter(([d])=>d!=="total").map(([d,p])=>({category:d,label:this.getCategoryLabel(d),value:parseFloat(p)||0,formatted:this.formatCurrency(parseFloat(p)||0)})).filter(d=>d.value>0).sort((d,p)=>p.value-d.value),u=Object.entries(e.subtractions||{}).filter(([d])=>d!=="total").map(([d,p])=>({category:d,label:this.getCategoryLabel(d),value:parseFloat(p)||0,formatted:this.formatCurrency(parseFloat(p)||0)})).filter(d=>d.value>0).sort((d,p)=>p.value-d.value);return{base:e.base?.calculated||0,baseFormatted:this.formatCurrency(e.base?.calculated||0),additions:c,additionsTotal:e.additions?.total||0,additionsTotalFormatted:this.formatCurrency(e.additions?.total||0),subtractions:u,subtractionsTotal:e.subtractions?.total||0,subtractionsTotalFormatted:this.formatCurrency(e.subtractions?.total||0),available:e.available||0,availableFormatted:this.formatCurrency(e.available||0)}}}async function _(){try{const w=await h.collection("paises").get();if(w.empty)return 0;let e=0,c=0;return w.forEach(u=>{const d=parseFloat(u.data().PIB);isNaN(d)||(e+=d,c++)}),c>0?e/c:0}catch(w){return console.error("Error calculating global average GDP:",w),0}}class x{constructor(){this.maxLevel=10,this.baseMaintenancePercent=.005}calculateUpgradeCost(e,c,u,d=null){if(e>=this.maxLevel)return 0;const p=d||e+1;if(p>this.maxLevel)return 0;const b=c.Marinha||1,f=c.IndustrialEfficiency||30,E=c.PIB||0,M=15e-7,g=100,S=200,C=.5,A=.5,P=1+b/g,v=1+f/S,R=(u*C+E*A)*M/(P*v)*Math.pow(p,2)*Math.pow(1.6,p);return Math.round(R*1e3)}calculateMaintenanceCost(e,c){if(e===0)return 0;const u=this.baseMaintenancePercent*Math.pow(e,2)*Math.pow(1.5,e);return Math.round(c*u)}calculateProductionBonus(e){if(e===0)return{parallelMultiplier:.5,timeReduction:0,maxSimultaneous:1};const c=1+e*.3,u=Math.min(.5,e*.05),d=Math.min(15,1+e);return{parallelMultiplier:c,timeReduction:u,maxSimultaneous:d}}getLevelInfo(e,c=null,u=null){const d=this.calculateProductionBonus(e),p=c&&u!=null?this.calculateUpgradeCost(e,c,u):0;return{level:e,description:this.getLevelDescription(e),upgradeCost:p,parallelBonus:Math.round((d.parallelMultiplier-1)*100),timeReduction:Math.round(d.timeReduction*100),maxProjects:d.maxSimultaneous,maintenancePercent:e===0?0:this.baseMaintenancePercent*Math.pow(e,2)*Math.pow(1.5,e)}}getLevelDescription(e){return{0:"Sem estaleiros - Produ√ß√£o naval severamente limitada",1:"Estaleiro B√°sico - Opera√ß√µes navais simples",2:"Estaleiro Melhorado - Maior efici√™ncia produtiva",3:"Estaleiro Avan√ßado - Constru√ß√£o de navios m√©dios",4:"Estaleiro Industrial - Produ√ß√£o em s√©rie",5:"Estaleiro Moderno - Tecnologia avan√ßada",6:"Complexo Naval - M√∫ltiplos projetos simult√¢neos",7:"Arsenal Imperial - Constru√ß√£o de grandes navios",8:"Estaleiro de Elite - Efici√™ncia excepcional",9:"Complexo Estrat√©gico - Supremacia naval",10:"Arsenal Supremo - Poder naval absoluto"}[e]||"N√≠vel desconhecido"}canUpgrade(e,c,u,d){if(e>=this.maxLevel)return{canUpgrade:!1,reason:"N√≠vel m√°ximo atingido"};const p=this.calculateUpgradeCost(e,c,u);return d<p?{canUpgrade:!1,reason:`Or√ßamento insuficiente. Necess√°rio: ${p.toLocaleString()}`}:{canUpgrade:!0,upgradeCost:p}}applyShipyardBonusToProduction(e,c,u=0){const d=this.calculateProductionBonus(c),p=e.build_time_months*(1-d.timeReduction)*(1-u);return{...e,build_time_months:Math.ceil(p),max_parallel:Math.ceil((e.max_parallel||1)*d.parallelMultiplier),shipyard_efficiency:d.parallelMultiplier,time_reduction_percent:Math.round(d.timeReduction*100),production_line_bonus_percent:Math.round(u*100)}}async getCurrentShipyardLevel(e){try{const c=await h.collection("paises").doc(e).get();return c.exists&&c.data().shipyardLevel||0}catch(c){return console.error("Erro ao obter n√≠vel do estaleiro:",c),0}}async upgradeShipyard(e){try{const c=await h.collection("paises").doc(e).get();if(!c.exists)throw new Error("Pa√≠s n√£o encontrado.");const u=c.data(),d=u.shipyardLevel||0,p=parseFloat(u.PIB)||0,b=(parseFloat(u.Burocracia)||0)/100,f=(parseFloat(u.Estabilidade)||0)/100,E=p*.25*b*(f*1.5),M=await _(),g=this.canUpgrade(d,u,M,E);if(!g.canUpgrade)throw new Error(g.reason);const S=d+1,C=g.upgradeCost;return await h.collection("paises").doc(e).update({shipyardLevel:S,lastShipyardUpgrade:new Date}),await h.collection("shipyard_transactions").add({countryId:e,type:"upgrade",fromLevel:d,toLevel:S,cost:C,timestamp:new Date}),{success:!0,newLevel:S,cost:C,levelInfo:this.getLevelInfo(S,u,M)}}catch(c){return console.error("Erro ao fazer upgrade do estaleiro:",c),{success:!1,error:c.message}}}async applyMaintenanceCosts(){try{console.log("üîß Aplicando custos de manuten√ß√£o dos estaleiros...");const e=await h.collection("paises").get(),c=[];for(const u of e.docs){const d=u.data(),p=d.shipyardLevel||0;if(p===0)continue;const b=parseFloat(d.PIB)||0,f=(parseFloat(d.Burocracia)||0)/100,E=(parseFloat(d.Estabilidade)||0)/100,M=b*.25*f*(E*1.5),g=this.calculateMaintenanceCost(p,M),S=g/M*100;let C=0;S>10&&(C=-Math.min(5,Math.floor((S-10)/2)));const A=Math.max(0,(parseFloat(d.Estabilidade)||0)+C),P={lastShipyardMaintenance:new Date};C!==0&&(P.Estabilidade=A),await l.collection("paises").doc(o.id).update(P),await N.addExpense(o.id,N.EXPENSE_CATEGORIES.SHIPYARD_MAINTENANCE,g,`Manuten√ß√£o de Estaleiros (N√≠vel ${p})`),t.push({countryId:o.id,countryName:a.Pais,shipyardLevel:n,maintenanceCost:s,maintenancePercent:r.toFixed(2),stabilityImpact:i})}return console.log(`‚úÖ Manuten√ß√£o aplicada a ${c.length} pa√≠ses com estaleiros`),c}catch(e){throw console.error("‚ùå Erro ao aplicar manuten√ß√£o dos estaleiros:",e),e}}}export{N as B,x as S};
