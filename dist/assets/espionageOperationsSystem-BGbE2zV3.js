import{db as l}from"./firebase-BN3MSMQD.js";const p={limited:{name:"Limitada",icon:"🥉",minBudgetPercent:.5,maxBudgetPercent:2,power:"fraca",description:"Operações básicas limitadas",modifier:-1},competent:{name:"Competente",icon:"🥈",minBudgetPercent:2,maxBudgetPercent:5,power:"média",description:"Boas capacidades operacionais",modifier:0},powerful:{name:"Poderosa",icon:"🥇",minBudgetPercent:5,maxBudgetPercent:10,power:"forte",description:"Operações complexas e eficazes",modifier:1},elite:{name:"Elite",icon:"💎",minBudgetPercent:10,maxBudgetPercent:15,power:"muito forte",description:"Domínio total em inteligência",modifier:2}},b={external_espionage:{name:"Espionagem Externa",icon:"🕵️",description:"HUMINT/SIGINT contra outros países",bonuses:{espionageSuccess:10,infiltrationSpeed:15}},counterintelligence:{name:"Contra-Espionagem",icon:"🛡️",description:"Segurança nacional e anti-espionagem",bonuses:{detection:20,investigation:15}},covert_operations:{name:"Operações Encobertas",icon:"🎭",description:"Sabotagem, influência e subversão",bonuses:{sabotageSuccess:15,psychologicalWarfare:20}}};class y{constructor(){this.agencies=new Map,this.lastUpdate=null}calculateCostByPIB(e,t){const a=parseFloat(t.PIB)||0,o=parseFloat(t.Populacao)||1,r=a/o,n=a/1e9,s=Math.max(.5,Math.min(3,Math.log10(n+1)*.8+.5));let i=1;r<2e3?i=.8:r>2e4&&(i=1.3);const d=s*i;return Math.round(e*d)}calculateBudget(e){const t=parseFloat(e.PIB)||0,a=(parseFloat(e.Burocracia)||0)/100,o=(parseFloat(e.Estabilidade)||0)/100,r=t*.25*a*o*1.5,n=parseFloat(e.OrcamentoGasto||0),s=parseFloat(e.AgencyBudgetSpent||0);return Math.max(0,r-n-s)}determineTier(e){return e>=p.elite.minBudgetPercent?"elite":e>=p.powerful.minBudgetPercent?"powerful":e>=p.competent.minBudgetPercent?"competent":"limited"}calculateFoundationCost(e){return this.calculateCostByPIB(15e8,e)}async hasAgency(e){try{const t=await l.collection("agencies").where("countryId","==",e).get();if(!t.empty){const a=t.docs[0].data();return a.id=t.docs[0].id,a}return null}catch(t){return console.error("Erro ao verificar agência:",t),null}}async foundAgency(e,t,a,o,r){try{if(await this.hasAgency(e.id))return{success:!1,error:"Este país já possui uma agência de inteligência!"};const s=Math.max(.5,Math.min(15,parseFloat(a))),i=this.calculateFoundationCost(e),d=this.calculateBudget(e);if(d<i)return{success:!1,error:"Orçamento nacional insuficiente para fundar agência!"};const g=this.determineTier(s),f=p[g],u=Math.round(d*(s/100)),m={countryId:e.id,countryName:e.Pais,name:t||`Agência de ${e.Pais}`,foundedTurn:r,budgetPercent:s,budget:u,tier:g,tierName:f.name,focus:o,focusName:b[o].name,technologies:[],currentResearch:null,operations:[],operatives:0,foundationCost:i,createdAt:new Date().toISOString()},P=await l.collection("agencies").add(m),h=parseFloat(e.OrcamentoGasto||0),c=i+u;return await l.collection("paises").doc(e.id).update({hasAgency:!0,agencyId:P.id,OrcamentoGasto:h+c,AgencyBudgetSpent:u}),{success:!0,agency:{...m,id:P.id},cost:i,annualBudget:u,totalSpent:c,tier:f}}catch(n){return console.error("Erro ao fundar agência:",n),{success:!1,error:"Erro ao processar fundação: "+n.message}}}async updateAgencyBudget(e,t,a){try{const o=Math.max(.5,Math.min(15,parseFloat(t))),r=this.calculateBudget(a),n=Math.round(r*(o/100)),s=this.determineTier(o);return await l.collection("agencies").doc(e).update({budgetPercent:o,budget:n,tier:s,tierName:p[s].name}),await l.collection("paises").doc(a.id).update({AgencyBudgetSpent:n}),{success:!0,newBudget:n,newTier:s,budgetUpdated:!0}}catch(o){return console.error("Erro ao atualizar orçamento da agência:",o),{success:!1,error:o.message}}}async getAgency(e){try{const t=await l.collection("agencies").where("countryId","==",e).get();if(!t.empty){const a=t.docs[0].data();return a.id=t.docs[0].id,a}return null}catch(t){return console.error("Erro ao buscar agência:",t),null}}async dissolveAgency(e,t){try{return await l.collection("agencies").doc(e).delete(),await l.collection("paises").doc(t).update({hasAgency:!1,agencyId:null}),{success:!0}}catch(a){return console.error("Erro ao dissolver agência:",a),{success:!1,error:a.message}}}getTiers(){return p}getFocuses(){return b}}const S=new y,v={1:{name:"Estabelecer Presença",icon:"🚶",duration:[2,4],activities:["Enviar operativos","Criar identidades de cobertura","Estabelecer safe houses","Mapear território"],intelUnlocked:0,risks:["Operativos capturados","Identidades expostas"],description:"Primeiros passos em território inimigo"},2:{name:"Recrutar Rede Local",icon:"👥",duration:[2,6],activities:["Identificar alvos para recrutamento","Aproximar e recrutar","Construir rede de informantes","Estabelecer comunicações seguras"],intelUnlocked:10,risks:["Informantes capturados","Rede comprometida"],description:"Construir base de operações local"},3:{name:"Penetração",icon:"🎯",duration:[3,8],activities:["Infiltrar instalações-chave","Plantar dispositivos","Subornar oficiais","Acessar documentos classificados"],intelUnlocked:40,risks:["Contra-espionagem ativa","Dispositivos descobertos"],description:"Acesso a informações sensíveis"},4:{name:"Operações Completas",icon:"⚡",duration:"ongoing",activities:["Acesso total a informações","Capacidade de sabotagem","Influenciar decisões","Operações encobertas"],intelUnlocked:100,risks:["Detecção constante","Guerra de contra-espionagem"],description:"Domínio completo de inteligência"}},E={0:{label:"Público",info:["PIB","População","Modelo Político","WPI","Estabilidade (geral)","Urbanização","Tecnologia (%)"]},10:{label:"Presença Estabelecida",info:["Orçamento Nacional aproximado","Recursos principais","Principais cidades"]},40:{label:"Rede Infiltrada",info:["Orçamento detalhado","Distribuição militar","Tecnologias específicas","Capacidade de produção"]},70:{label:"Penetração Profunda",info:["Inventário militar parcial","Planos de produção","Bens de consumo","Recursos detalhados"]},100:{label:"Domínio Total",info:["Inventário completo","Ordens de batalha","Intenções diplomáticas","Projetos secretos","Agência inimiga (se houver)"]}},B={CLEAN_FAIL:{name:"Falha Limpa",exposed:!1,detailsRevealed:0,severity:"low"},MINOR_EXPOSURE:{name:"Exposição Menor",exposed:!0,detailsRevealed:20,severity:"medium"},MAJOR_EXPOSURE:{name:"Exposição Grave",exposed:!0,detailsRevealed:60,severity:"high"},TOTAL_COMPROMISE:{name:"Comprometimento Total",exposed:!0,detailsRevealed:100,operativesCaptured:!0,severity:"critical"}};class M{constructor(){this.operations=new Map}calculateOperationCost(e,t){const r=.5+(parseFloat(e.WarPower)||50)/100;return Math.round(25e3*t*r)}calculatePhaseSuccessChance(e,t,a,o){let r=.6;r-=(e-1)*.1,r+={limited:-.1,competent:0,powerful:.1,elite:.2}[t.tier]||0;const s=(parseFloat(o.TecnologiaCivil)||parseFloat(o.Tecnologia)||0)/100;r+=s*.15;const i=(parseFloat(a.CounterIntelligence)||0)/100;r-=i*2.5;const d=(parseFloat(a.Urbanizacao)||0)/100;return r-=d*.08,t.technologies&&(t.technologies.includes("tradecraft_basic")&&(r+=.1),t.technologies.includes("recruitment_native")&&(r+=.15),e>=3&&t.technologies.includes("surveillance_electronic")&&(r+=.1)),Math.max(.05,Math.min(.95,r))}calculateDetectionChance(e,t){const a=(parseFloat(t.CounterIntelligence)||0)/100;let o=e*.05;return o+=a*4,Math.min(.9,o)}async hasActiveOperation(e,t){try{const a=await l.collection("espionage_operations").where("spyCountryId","==",e).where("targetCountryId","==",t).where("active","==",!0).get();if(!a.empty){const o=a.docs[0].data();return o.id=a.docs[0].id,o}return null}catch(a){return console.error("Erro ao verificar operação:",a),null}}async initiateOperation(e,t,a,o,r){try{if(await this.hasActiveOperation(e.countryId,t.id))return{success:!1,error:"Você já tem uma operação ativa neste país!"};const s=this.calculateOperationCost(t,o);if(e.budget<s)return{success:!1,error:"Orçamento da agência insuficiente!"};const i={agencyId:e.id,spyCountryId:e.countryId,spyCountryName:e.countryName,targetCountryId:t.id,targetCountryName:t.Pais,phase:1,progress:0,startedTurn:r,lastProgressTurn:r,plannedDuration:o,operativesDeployed:Math.floor(3+Math.random()*5),coverIdentities:this.generateCoverIdentities(),detected:!1,detectedTurn:null,active:!0,intelLevel:0,createdAt:new Date().toISOString()},d=await l.collection("espionage_operations").add(i);return{success:!0,operation:{...i,id:d.id},cost:s}}catch(n){return console.error("Erro ao iniciar operação:",n),{success:!1,error:"Erro ao processar operação: "+n.message}}}generateCoverIdentities(){const e=["Comerciante","Jornalista","Diplomata","Professor","Engenheiro","Médico","Empresário","Turista","Estudante","Artista","Pesquisador","Consultor"],t=Math.floor(2+Math.random()*3),a=[];for(let o=0;o<t;o++){const r=e[Math.floor(Math.random()*e.length)];a.includes(r)||a.push(r)}return a}async progressOperation(e,t,a,o,r){try{const n=await l.collection("espionage_operations").doc(e).get();if(!n.exists)return{success:!1,error:"Operação não encontrada!"};const s=n.data();if(s.lastProgressTurn===r)return{success:!1,error:"Operação já progrediu neste turno!"};const i=s.phase,d=v[i],g=this.calculatePhaseSuccessChance(i,t,a,o),u=Math.random()<=g,m=this.calculateDetectionChance(i,a),h=Math.random()<=m;let c={lastProgressTurn:r};if(u){const w=100/(d.duration[1]||4),I=Math.min(100,s.progress+w);c.progress=I,I>=100&&(i<4?(c.phase=i+1,c.progress=0,c.intelLevel=v[i+1].intelUnlocked):c.intelLevel=100)}return h&&!s.detected&&(c.detected=!0,c.detectedTurn=r),await l.collection("espionage_operations").doc(e).update(c),{success:!0,succeeded:u,detected:h,newPhase:c.phase||i,newProgress:c.progress||s.progress,intelLevel:c.intelLevel||s.intelLevel,successChance:Math.round(g*100),detectionChance:Math.round(m*100)}}catch(n){return console.error("Erro ao progredir operação:",n),{success:!1,error:n.message}}}async getAgencyOperations(e){try{return(await l.collection("espionage_operations").where("agencyId","==",e).where("active","==",!0).get()).docs.map(a=>({id:a.id,...a.data()}))}catch(t){return console.error("Erro ao buscar operações:",t),[]}}async terminateOperation(e){try{return await l.collection("espionage_operations").doc(e).update({active:!1,terminatedAt:new Date().toISOString()}),{success:!0}}catch(t){return console.error("Erro ao encerrar operação:",t),{success:!1,error:t.message}}}getPhases(){return v}getIntelLayers(){return E}getFailureTypes(){return B}}const T=new M;export{p as A,v as I,T as e,S as i};
