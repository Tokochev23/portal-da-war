import{db as c}from"./firebase-BN3MSMQD.js";import{e as p,i as u}from"./espionageOperationsSystem-BGbE2zV3.js";class y{constructor(){this.lastProcessedTurn=0}async processTurnEvents(t){if(t!==this.lastProcessedTurn){console.log(`[TurnEvents] Processando eventos do turno #${t}`);try{await this.progressAllEspionageOperations(t),this.lastProcessedTurn=t,console.log(`[TurnEvents] Eventos do turno #${t} processados com sucesso`)}catch(e){console.error("[TurnEvents] Erro ao processar eventos do turno:",e)}}}async progressAllEspionageOperations(t){try{console.log("[TurnEvents] Progredindo opera√ß√µes de espionagem...");const e=await c.collection("espionage_operations").where("active","==",!0).get();if(e.empty){console.log("[TurnEvents] Nenhuma opera√ß√£o ativa encontrada");return}const a=e.docs.map(o=>({id:o.id,...o.data()}));console.log(`[TurnEvents] ${a.length} opera√ß√£o(√µes) ativa(s) encontrada(s)`);for(const o of a)try{const n=await c.collection("agencies").doc(o.agencyId).get();if(!n.exists){console.warn(`[TurnEvents] Ag√™ncia ${o.agencyId} n√£o encontrada`);continue}const i={id:n.id,...n.data()},r=await c.collection("paises").doc(o.spyCountryId).get(),d=await c.collection("paises").doc(o.targetCountryId).get();if(!r.exists||!d.exists){console.warn(`[TurnEvents] Pa√≠ses n√£o encontrados para opera√ß√£o ${o.id}`);continue}const g={id:r.id,...r.data()},l={id:d.id,...d.data()},s=await p.progressOperation(o.id,i,l,g,t);s.success&&(console.log(`[TurnEvents] Opera√ß√£o ${o.id} progredida: ${s.succeeded?"SUCESSO":"FALHA"} | Fase ${s.newPhase} | Progresso: ${Math.round(s.newProgress)}% | ${s.detected?"‚ö†Ô∏è DETECTADO":"‚úì N√£o detectado"}`),(s.succeeded||s.detected)&&await this.createOperationNotification(o,s,g))}catch(n){console.error(`[TurnEvents] Erro ao processar opera√ß√£o ${o.id}:`,n)}console.log("[TurnEvents] Todas as opera√ß√µes foram processadas")}catch(e){console.error("[TurnEvents] Erro ao buscar opera√ß√µes:",e)}}async createOperationNotification(t,e,a){try{const o={countryId:t.spyCountryId,type:"espionage_progress",title:e.detected?"‚ö†Ô∏è Opera√ß√£o Detectada!":"üïµÔ∏è Progresso de Espionagem",message:e.detected?`Sua opera√ß√£o em ${t.targetCountryName} foi detectada! Risco de exposi√ß√£o aumentado.`:e.succeeded?`Opera√ß√£o em ${t.targetCountryName} progrediu para Fase ${e.newPhase}. Intel: ${e.intelLevel}%`:`Opera√ß√£o em ${t.targetCountryName} n√£o progrediu neste turno.`,data:{operationId:t.id,targetCountry:t.targetCountryName,phase:e.newPhase,intelLevel:e.intelLevel,detected:e.detected,succeeded:e.succeeded},read:!1,createdAt:new Date().toISOString()};console.log("[TurnEvents] Notifica√ß√£o criada:",o.title)}catch(o){console.error("[TurnEvents] Erro ao criar notifica√ß√£o:",o)}}async updateAgencyBudgets(t){try{console.log("[TurnEvents] Atualizando or√ßamentos das ag√™ncias...");const e=await c.collection("agencies").get();for(const a of e.docs){const o={id:a.id,...a.data()},n=await c.collection("paises").doc(o.countryId).get();if(!n.exists)continue;const i={id:n.id,...n.data()},r=u.calculateBudget(i);r<o.budget&&console.warn(`[TurnEvents] ${i.Pais} n√£o tem or√ßamento suficiente para manter ag√™ncia (necess√°rio: $${o.budget}, dispon√≠vel: $${r})`)}}catch(e){console.error("[TurnEvents] Erro ao atualizar or√ßamentos:",e)}}init(t){this.lastProcessedTurn=t-1,console.log(`[TurnEvents] Sistema inicializado no turno #${t}`)}}const f=new y;export{f as t};
