const t={Metais:{gameResourceId:"metais",displayName:"Metais",description:"Matéria-prima para construção e indústria",defaultUnit:"toneladas",marketTypes:[{id:"metais",name:"Metais",description:"Metais diversos para construção e indústria",basePrice:5e5,qualityMultiplier:1}]},Combustivel:{gameResourceId:"combustivel",displayName:"Combustível",description:"Petróleo e derivados para energia e transporte",defaultUnit:"barris",marketTypes:[{id:"combustivel",name:"Combustível",description:"Petróleo e derivados",basePrice:8e4,qualityMultiplier:1}]},Carvao:{gameResourceId:"carvao",displayName:"Carvão",description:"Combustível fóssil para geração de energia",defaultUnit:"toneladas",marketTypes:[{id:"carvao",name:"Carvão",description:"Carvão mineral para usinas termelétricas",basePrice:1e5,qualityMultiplier:1}]},Graos:{gameResourceId:"graos",displayName:"Alimentos",description:"Produtos agrícolas e alimentos processados",defaultUnit:"toneladas",marketTypes:[{id:"graos",name:"Alimentos",description:"Grãos, carnes e produtos alimentícios",basePrice:3e5,qualityMultiplier:1}]}};function i(s){for(const e of Object.values(t)){const a=e.marketTypes.find(r=>r.id===s);if(a)return{...a,gameResourceId:e.gameResourceId,defaultUnit:e.defaultUnit}}return null}function o(s,e){const a=i(s);if(!a)return null;const r=e<1e4?1.3:e<5e4?1.1:e>2e5?.9:1;return{min:Math.round(a.basePrice*.7*r),suggested:Math.round(a.basePrice*r),max:Math.round(a.basePrice*1.5*r),unit:a.defaultUnit}}function n(s){for(const e in t)if(t[e].marketTypes.some(r=>r.id===s))return e;return null}export{t as R,n as a,o as b,i as g};
