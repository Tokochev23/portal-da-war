import{h as c}from"./firebase-CFOznPL1.js";import{g as C,a as v}from"./resourceMapping-CNM62YsJ.js";import"./preload-helper-f85Crcwt.js";import"https://www.gstatic.com/firebasejs/10.12.2/firebase-app-compat.js";import"https://www.gstatic.com/firebasejs/10.12.2/firebase-auth-compat.js";import"https://www.gstatic.com/firebasejs/10.12.2/firebase-firestore-compat.js";import"https://www.gstatic.com/firebasejs/10.12.2/firebase-storage-compat.js";class x{constructor(){this.ordersCollection="marketplace_recurring_orders",this.transactionsCollection="marketplace_recurring_transactions",this.matchesCollection="marketplace_order_matches"}async createRecurringOrder(e){try{console.log("üìù Criando ordem recorrente:",e),this.validateOrderData(e);const t=C(e.item_id);if(!t)throw new Error(`Tipo de recurso n√£o reconhecido: ${e.item_id}`);const a=await c.collection("paises").doc(e.country_id).get();if(!a.exists)throw new Error("Pa√≠s n√£o encontrado");const o=a.data();e.order_type==="sell"?await this.validateSellOrder(e,o,t):e.order_type==="buy"&&await this.validateBuyOrder(e,o,t);const r={country_id:e.country_id,country_name:o.Nome||"Unknown",order_type:e.order_type,item_id:e.item_id,item_name:t.name,quantity:parseFloat(e.quantity),unit:t.defaultUnit,price_per_unit:parseFloat(e.price_per_unit),min_stock_reserve:parseFloat(e.min_stock_reserve||0),min_budget_reserve:parseFloat(e.min_budget_reserve||0),max_price_buy:e.order_type==="buy"?parseFloat(e.max_price_buy||e.price_per_unit*1.2):null,min_price_sell:e.order_type==="sell"?parseFloat(e.min_price_sell||e.price_per_unit*.8):null,status:"active",created_at:new Date,updated_at:new Date,last_execution:null,total_executed:0,total_volume:0,total_value:0,auto_renew:!0,expires_at:null},s=await c.collection(this.ordersCollection).add(r);return console.log("‚úÖ Ordem recorrente criada:",s.id),await this.matchOrders(s.id),{success:!0,orderId:s.id,order:r}}catch(t){throw console.error("‚ùå Erro ao criar ordem recorrente:",t),t}}validateOrderData(e){const t=["country_id","order_type","item_id","quantity","price_per_unit"];for(const a of t)if(!e[a])throw new Error(`Campo obrigat√≥rio faltando: ${a}`);if(!["buy","sell"].includes(e.order_type))throw new Error('order_type deve ser "buy" ou "sell"');if(e.quantity<=0)throw new Error("Quantidade deve ser maior que zero");if(e.price_per_unit<=0)throw new Error("Pre√ßo deve ser maior que zero")}async validateSellOrder(e,t,a){const o=v(e.item_id),r=window.ResourceProductionCalculator?.calculateCountryProduction(t)[o]||0,s=window.ResourceConsumptionCalculator?.calculateCountryConsumption(t)[o]||0,n=Math.max(0,r-s),u=e.quantity+(e.min_stock_reserve||0);if(n<u)throw new Error(`Estoque insuficiente. Necess√°rio: ${u.toLocaleString()} ${a.defaultUnit} (${e.quantity.toLocaleString()} venda + ${e.min_stock_reserve?.toLocaleString()||0} reserva). Dispon√≠vel: ${n.toLocaleString()}`)}async validateBuyOrder(e,t,a){const o=this.calculateBudget(t),r=e.quantity*e.price_per_unit,s=r+(e.min_budget_reserve||0);if(o<s)throw new Error(`Or√ßamento insuficiente. Necess√°rio: $${s.toLocaleString()} ($${r.toLocaleString()} compra + $${e.min_budget_reserve?.toLocaleString()||0} reserva). Dispon√≠vel: $${o.toLocaleString()}`)}calculateBudget(e){const t=parseFloat(e.PIB)||0,a=(parseFloat(e.Burocracia)||0)/100,o=(parseFloat(e.Estabilidade)||0)/100,r=t*.25*a*(o*1.5),s=parseFloat(e.OrcamentoGasto||0),n=parseFloat(e.AgencyBudgetSpent||0);return Math.max(0,r-s-n)}async matchOrders(e=null){try{console.log("üîç Procurando matches para ordens...");let t=[];if(e){const o=await c.collection(this.ordersCollection).doc(e).get();o.exists&&o.data().status==="active"&&(t=[{id:o.id,...o.data()}])}else t=(await c.collection(this.ordersCollection).where("status","==","active").get()).docs.map(r=>({id:r.id,...r.data()}));const a=[];for(const o of t.filter(r=>r.order_type==="sell")){const r=await c.collection(this.ordersCollection).where("order_type","==","buy").where("item_id","==",o.item_id).where("status","==","active").get();for(const s of r.docs){const n={id:s.id,...s.data()};if(n.country_id===o.country_id)continue;const u=o.price_per_unit,i=n.price_per_unit,_=o.min_price_sell||u*.8,d=n.max_price_buy||i*1.2;if(i>=_&&i<=d){const m=(u+i)/2,y=Math.min(o.quantity,n.quantity),h={sell_order_id:o.id,buy_order_id:n.id,item_id:o.item_id,quantity:y,price:m,total_value:y*m,status:"pending",created_at:new Date};await c.collection(this.matchesCollection).add(h),a.push(h),console.log(`‚úÖ Match criado: ${o.country_name} vende ${y} ${o.unit} de ${o.item_name} para ${n.country_name} por $${m.toFixed(2)}/${o.unit}`)}}}return console.log(`üéØ Total de matches criados: ${a.length}`),a}catch(t){throw console.error("‚ùå Erro ao fazer matching de ordens:",t),t}}async processTurnRecurringOrders(e){try{console.log(`üîÑ Processando ordens recorrentes do turno ${e}...`);const t=await c.collection(this.matchesCollection).where("status","==","pending").get(),a={total:t.size,executed:0,failed:0,errors:[]};for(const o of t.docs){const r=o.data();try{const s=await this.executeRecurringTransaction(r,e);s.success?(a.executed++,await o.ref.update({status:"completed",executed_at:new Date})):(a.failed++,a.errors.push({matchId:o.id,reason:s.reason}),await o.ref.update({status:"failed",error:s.reason}))}catch(s){a.failed++,a.errors.push({matchId:o.id,error:s.message}),console.error(`‚ùå Erro ao executar match ${o.id}:`,s)}}return console.log(`‚úÖ Processamento conclu√≠do: ${a.executed} executadas, ${a.failed} falhas`),a}catch(t){throw console.error("‚ùå Erro ao processar ordens recorrentes:",t),t}}async executeRecurringTransaction(e,t){try{console.log("‚öôÔ∏è Executando transa√ß√£o recorrente:",e);const a=await c.collection(this.ordersCollection).doc(e.sell_order_id).get(),o=await c.collection(this.ordersCollection).doc(e.buy_order_id).get();if(!a.exists||!o.exists)return{success:!1,reason:"Ordens n√£o encontradas"};const r={id:a.id,...a.data()},s={id:o.id,...o.data()},n=await c.collection("paises").doc(r.country_id).get(),u=await c.collection("paises").doc(s.country_id).get();if(!n.exists||!u.exists)return{success:!1,reason:"Pa√≠ses n√£o encontrados"};const i=n.data(),_=u.data(),d=v(r.item_id),m=window.ResourceProductionCalculator?.calculateCountryProduction(i)[d]||0,y=window.ResourceConsumptionCalculator?.calculateCountryConsumption(i)[d]||0;if(Math.max(0,m-y)<e.quantity+r.min_stock_reserve)return await c.collection(this.ordersCollection).doc(r.id).update({status:"out_of_stock",updated_at:new Date}),{success:!1,reason:"Vendedor sem estoque suficiente"};const f=this.calculateBudget(_),l=e.quantity*e.price;if(f<l+s.min_budget_reserve)return await c.collection(this.ordersCollection).doc(s.id).update({status:"out_of_budget",updated_at:new Date}),{success:!1,reason:"Comprador sem or√ßamento suficiente"};const p=c.batch(),w=parseFloat(i[d]||0);p.update(c.collection("paises").doc(r.country_id),{[d]:w-e.quantity,OrcamentoGasto:Math.max(0,parseFloat(i.OrcamentoGasto||0)-l),updated_at:new Date});const g=parseFloat(_[d]||0);p.update(c.collection("paises").doc(s.country_id),{[d]:g+e.quantity,OrcamentoGasto:parseFloat(_.OrcamentoGasto||0)+l,updated_at:new Date});const b=c.collection(this.transactionsCollection).doc();return p.set(b,{sell_order_id:r.id,buy_order_id:s.id,seller_country_id:r.country_id,seller_country_name:r.country_name,buyer_country_id:s.country_id,buyer_country_name:s.country_name,item_id:r.item_id,item_name:r.item_name,quantity:e.quantity,unit:r.unit,price_per_unit:e.price,total_value:l,executed_at:new Date,turn_number:t,status:"completed",seller_budget_before:this.calculateBudget(i),seller_budget_after:this.calculateBudget({...i,OrcamentoGasto:Math.max(0,parseFloat(i.OrcamentoGasto||0)-l)}),buyer_budget_before:f,buyer_budget_after:this.calculateBudget({..._,OrcamentoGasto:parseFloat(_.OrcamentoGasto||0)+l}),seller_stock_before:w,seller_stock_after:w-e.quantity,buyer_stock_before:g,buyer_stock_after:g+e.quantity}),p.update(c.collection(this.ordersCollection).doc(r.id),{last_execution:new Date,total_executed:(r.total_executed||0)+1,total_volume:(r.total_volume||0)+e.quantity,total_value:(r.total_value||0)+l,updated_at:new Date}),p.update(c.collection(this.ordersCollection).doc(s.id),{last_execution:new Date,total_executed:(s.total_executed||0)+1,total_volume:(s.total_volume||0)+e.quantity,total_value:(s.total_value||0)+l,updated_at:new Date}),await p.commit(),console.log(`‚úÖ Transa√ß√£o executada: ${r.country_name} vendeu ${e.quantity} ${r.unit} de ${r.item_name} para ${s.country_name} por $${l.toLocaleString()}`),{success:!0,transactionId:b.id}}catch(a){return console.error("‚ùå Erro ao executar transa√ß√£o recorrente:",a),{success:!1,error:a.message}}}async cancelOrder(e){try{return await c.collection(this.ordersCollection).doc(e).update({status:"cancelled",updated_at:new Date}),console.log("‚úÖ Ordem cancelada:",e),{success:!0}}catch(t){throw console.error("‚ùå Erro ao cancelar ordem:",t),t}}async pauseOrder(e){try{return await c.collection(this.ordersCollection).doc(e).update({status:"paused",updated_at:new Date}),console.log("‚è∏Ô∏è Ordem pausada:",e),{success:!0}}catch(t){throw console.error("‚ùå Erro ao pausar ordem:",t),t}}async reactivateOrder(e){try{return await c.collection(this.ordersCollection).doc(e).update({status:"active",updated_at:new Date}),console.log("‚ñ∂Ô∏è Ordem reativada:",e),await this.matchOrders(e),{success:!0}}catch(t){throw console.error("‚ùå Erro ao reativar ordem:",t),t}}async getCountryOrders(e,t=null){try{let a=c.collection(this.ordersCollection).where("country_id","==",e);return t&&(a=a.where("status","==",t)),(await a.orderBy("created_at","desc").get()).docs.map(r=>({id:r.id,...r.data()}))}catch(a){throw console.error("‚ùå Erro ao listar ordens:",a),a}}async getCountryTransactions(e,t=50){try{const a=await c.collection(this.transactionsCollection).where("seller_country_id","==",e).orderBy("executed_at","desc").limit(t).get(),o=await c.collection(this.transactionsCollection).where("buyer_country_id","==",e).orderBy("executed_at","desc").limit(t).get(),r=[...a.docs.map(s=>({id:s.id,type:"sell",...s.data()})),...o.docs.map(s=>({id:s.id,type:"buy",...s.data()}))];return r.sort((s,n)=>n.executed_at.toMillis()-s.executed_at.toMillis()),r.slice(0,t)}catch(a){throw console.error("‚ùå Erro ao buscar hist√≥rico de transa√ß√µes:",a),a}}}window.RecurringOrdersSystem=x;export{x as RecurringOrdersSystem};
