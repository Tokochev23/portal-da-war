const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/firebase-ep1w8F7T.js","assets/preload-helper-f85Crcwt.js","assets/utils-DLoRv3re.js"])))=>i.map(i=>d[i]);
import{_ as x}from"./preload-helper-f85Crcwt.js";import{db as s}from"./firebase-ep1w8F7T.js";import{g as O,a as v}from"./resourceMapping-BBQTZbLj.js";import{B as h}from"./shipyardSystem-CBTksbsh.js";import"./utils-DLoRv3re.js";import"https://www.gstatic.com/firebasejs/10.12.2/firebase-app-compat.js";import"https://www.gstatic.com/firebasejs/10.12.2/firebase-auth-compat.js";import"https://www.gstatic.com/firebasejs/10.12.2/firebase-firestore-compat.js";import"https://www.gstatic.com/firebasejs/10.12.2/firebase-storage-compat.js";import"https://www.gstatic.com/firebasejs/10.12.2/firebase-functions-compat.js";class E{constructor(){this.ordersCollection="marketplace_recurring_orders",this.transactionsCollection="marketplace_recurring_transactions",this.matchesCollection="marketplace_order_matches"}async createRecurringOrder(e){try{console.log("üìù Criando ordem recorrente:",e),this.validateOrderData(e);const t=O(e.item_id);if(!t)throw new Error(`Tipo de recurso n√£o reconhecido: ${e.item_id}`);const a=await s.collection("paises").doc(e.country_id).get();if(!a.exists)throw new Error("Pa√≠s n√£o encontrado");const r=a.data();e.order_type==="sell"?await this.validateSellOrder(e,r,t):e.order_type==="buy"&&await this.validateBuyOrder(e,r,t);const o=await x(()=>import("./firebase-ep1w8F7T.js"),__vite__mapDeps([0,1,2])).then(i=>i.auth.currentUser),c=e.player_id||o?.uid||null,n={country_id:e.country_id,country_name:r.Pais||r.Nome||"Unknown",country_flag:r.Flag||"üè≥Ô∏è",player_id:c,order_type:e.order_type,item_id:e.item_id,item_name:t.name,quantity:parseFloat(e.quantity),unit:t.defaultUnit,price_per_unit:parseFloat(e.price_per_unit),min_stock_reserve:parseFloat(e.min_stock_reserve||0),min_budget_reserve:parseFloat(e.min_budget_reserve||0),max_price_buy:e.order_type==="buy"?parseFloat(e.max_price_buy||e.price_per_unit*1.2):null,min_price_sell:e.order_type==="sell"?parseFloat(e.min_price_sell||e.price_per_unit*.8):null,status:"active",created_at:new Date,updated_at:new Date,last_execution:null,total_executed:0,total_volume:0,total_value:0,auto_renew:!0,expires_at:null},l=await s.collection(this.ordersCollection).add(n);return console.log("‚úÖ Ordem recorrente criada:",l.id),await this.matchOrders(l.id),{success:!0,orderId:l.id,order:n}}catch(t){throw console.error("‚ùå Erro ao criar ordem recorrente:",t),t}}validateOrderData(e){const t=["country_id","order_type","item_id","quantity","price_per_unit"];for(const a of t)if(!e[a])throw new Error(`Campo obrigat√≥rio faltando: ${a}`);if(!["buy","sell"].includes(e.order_type))throw new Error('order_type deve ser "buy" ou "sell"');if(e.quantity<=0)throw new Error("Quantidade deve ser maior que zero");if(e.price_per_unit<=0)throw new Error("Pre√ßo deve ser maior que zero")}async validateSellOrder(e,t,a){const r=v(e.item_id),o=window.ResourceProductionCalculator?.calculateCountryProduction(t)[r]||0,c=window.ResourceConsumptionCalculator?.calculateCountryConsumption(t)[r]||0,n=Math.max(0,o-c),l=e.quantity+(e.min_stock_reserve||0);if(n<l)throw new Error(`Estoque insuficiente. Necess√°rio: ${l.toLocaleString()} ${a.defaultUnit} (${e.quantity.toLocaleString()} venda + ${e.min_stock_reserve?.toLocaleString()||0} reserva). Dispon√≠vel: ${n.toLocaleString()}`)}async validateBuyOrder(e,t,a){const r=this.calculateBudget(t),o=e.quantity*e.price_per_unit,c=o+(e.min_budget_reserve||0);if(r<c)throw new Error(`Or√ßamento insuficiente. Necess√°rio: $${c.toLocaleString()} ($${o.toLocaleString()} compra + $${e.min_budget_reserve?.toLocaleString()||0} reserva). Dispon√≠vel: $${r.toLocaleString()}`)}calculateBudget(e){const t=parseFloat(e.PIB)||0,a=(parseFloat(e.Burocracia)||0)/100,r=(parseFloat(e.Estabilidade)||0)/100,o=t*.25*a*(r*1.5),c=parseFloat(e.OrcamentoGasto||0),n=parseFloat(e.AgencyBudgetSpent||0);return Math.max(0,o-c-n)}async matchOrders(e=null){try{console.log("üîç Procurando matches para ordens...");let t=[];if(e){const r=await s.collection(this.ordersCollection).doc(e).get();r.exists&&r.data().status==="active"&&(t=[{id:r.id,...r.data()}])}else t=(await s.collection(this.ordersCollection).where("status","==","active").get()).docs.map(o=>({id:o.id,...o.data()}));const a=[];for(const r of t.filter(o=>o.order_type==="sell")){const o=await s.collection(this.ordersCollection).where("order_type","==","buy").where("item_id","==",r.item_id).where("status","==","active").get();for(const c of o.docs){const n={id:c.id,...c.data()};if(n.country_id===r.country_id)continue;const l=r.price_per_unit,i=n.price_per_unit,_=r.min_price_sell||l*.8,d=n.max_price_buy||i*1.2;if(i>=_&&i<=d){const m=(l+i)/2,y=Math.min(r.quantity,n.quantity),w={sell_order_id:r.id,buy_order_id:n.id,item_id:r.item_id,quantity:y,price:m,total_value:y*m,status:"pending",created_at:new Date};await s.collection(this.matchesCollection).add(w),a.push(w),console.log(`‚úÖ Match criado: ${r.country_name} vende ${y} ${r.unit} de ${r.item_name} para ${n.country_name} por $${m.toFixed(2)}/${r.unit}`)}}}return console.log(`üéØ Total de matches criados: ${a.length}`),a}catch(t){throw console.error("‚ùå Erro ao fazer matching de ordens:",t),t}}async processTurnRecurringOrders(e){try{console.log(`üîÑ Processando ordens recorrentes do turno ${e}...`);const t=await s.collection(this.matchesCollection).where("status","==","pending").get(),a={total:t.size,executed:0,failed:0,errors:[]};for(const r of t.docs){const o=r.data();try{const c=await this.executeRecurringTransaction(o,e);c.success?(a.executed++,await r.ref.update({status:"completed",executed_at:new Date})):(a.failed++,a.errors.push({matchId:r.id,reason:c.reason}),await r.ref.update({status:"failed",error:c.reason}))}catch(c){a.failed++,a.errors.push({matchId:r.id,error:c.message}),console.error(`‚ùå Erro ao executar match ${r.id}:`,c)}}return console.log(`‚úÖ Processamento conclu√≠do: ${a.executed} executadas, ${a.failed} falhas`),a}catch(t){throw console.error("‚ùå Erro ao processar ordens recorrentes:",t),t}}async executeRecurringTransaction(e,t){try{console.log("‚öôÔ∏è Executando transa√ß√£o recorrente:",e);const a=await s.collection(this.ordersCollection).doc(e.sell_order_id).get(),r=await s.collection(this.ordersCollection).doc(e.buy_order_id).get();if(!a.exists||!r.exists)return{success:!1,reason:"Ordens n√£o encontradas"};const o={id:a.id,...a.data()},c={id:r.id,...r.data()},n=await s.collection("paises").doc(o.country_id).get(),l=await s.collection("paises").doc(c.country_id).get();if(!n.exists||!l.exists)return{success:!1,reason:"Pa√≠ses n√£o encontrados"};const i=n.data(),_=l.data(),d=v(o.item_id),m=window.ResourceProductionCalculator?.calculateCountryProduction(i)[d]||0,y=window.ResourceConsumptionCalculator?.calculateCountryConsumption(i)[d]||0;if(Math.max(0,m-y)<e.quantity+o.min_stock_reserve)return await s.collection(this.ordersCollection).doc(o.id).update({status:"out_of_stock",updated_at:new Date}),{success:!1,reason:"Vendedor sem estoque suficiente"};const b=this.calculateBudget(_),u=e.quantity*e.price;if(b<u+c.min_budget_reserve)return await s.collection(this.ordersCollection).doc(c.id).update({status:"out_of_budget",updated_at:new Date}),{success:!1,reason:"Comprador sem or√ßamento suficiente"};const p=s.batch(),g=parseFloat(i[d]||0);p.update(s.collection("paises").doc(o.country_id),{[d]:g-e.quantity,updated_at:new Date});const f=parseFloat(_[d]||0);p.update(s.collection("paises").doc(c.country_id),{[d]:f+e.quantity,updated_at:new Date});const C=s.collection(this.transactionsCollection).doc();p.set(C,{sell_order_id:o.id,buy_order_id:c.id,seller_country_id:o.country_id,seller_country_name:o.country_name,buyer_country_id:c.country_id,buyer_country_name:c.country_name,item_id:o.item_id,item_name:o.item_name,quantity:e.quantity,unit:o.unit,price_per_unit:e.price,total_value:u,executed_at:new Date,turn_number:t,status:"completed",seller_budget_before:this.calculateBudget(i),seller_budget_after:this.calculateBudget({...i,OrcamentoGasto:Math.max(0,parseFloat(i.OrcamentoGasto||0)-u)}),buyer_budget_before:b,buyer_budget_after:this.calculateBudget({..._,OrcamentoGasto:parseFloat(_.OrcamentoGasto||0)+u}),seller_stock_before:g,seller_stock_after:g-e.quantity,buyer_stock_before:f,buyer_stock_after:f+e.quantity}),p.update(s.collection(this.ordersCollection).doc(o.id),{last_execution:new Date,total_executed:(o.total_executed||0)+1,total_volume:(o.total_volume||0)+e.quantity,total_value:(o.total_value||0)+u,updated_at:new Date}),p.update(s.collection(this.ordersCollection).doc(c.id),{last_execution:new Date,total_executed:(c.total_executed||0)+1,total_volume:(c.total_volume||0)+e.quantity,total_value:(c.total_value||0)+u,updated_at:new Date}),await p.commit();try{await h.addIncome(o.country_id,h.INCOME_CATEGORIES.MARKETPLACE_SALES,u,`Venda de ${e.quantity} ${o.unit} de ${o.item_name} para ${c.country_name}`),await h.addExpense(c.country_id,h.EXPENSE_CATEGORIES.MARKETPLACE_PURCHASES,u,`Compra de ${e.quantity} ${o.unit} de ${o.item_name} de ${o.country_name}`),console.log(`üí∞ Budget atualizado: Vendedor +$${(u/1e6).toFixed(2)}M, Comprador -$${(u/1e6).toFixed(2)}M`)}catch($){console.error("‚ö†Ô∏è Erro ao atualizar budget tracker (transa√ß√£o j√° foi executada):",$)}return console.log(`‚úÖ Transa√ß√£o executada: ${o.country_name} vendeu ${e.quantity} ${o.unit} de ${o.item_name} para ${c.country_name} por $${u.toLocaleString()}`),{success:!0,transactionId:C.id}}catch(a){return console.error("‚ùå Erro ao executar transa√ß√£o recorrente:",a),{success:!1,error:a.message}}}async cancelOrder(e){try{return await s.collection(this.ordersCollection).doc(e).update({status:"cancelled",updated_at:new Date}),console.log("‚úÖ Ordem cancelada:",e),{success:!0}}catch(t){throw console.error("‚ùå Erro ao cancelar ordem:",t),t}}async pauseOrder(e){try{return await s.collection(this.ordersCollection).doc(e).update({status:"paused",updated_at:new Date}),console.log("‚è∏Ô∏è Ordem pausada:",e),{success:!0}}catch(t){throw console.error("‚ùå Erro ao pausar ordem:",t),t}}async reactivateOrder(e){try{return await s.collection(this.ordersCollection).doc(e).update({status:"active",updated_at:new Date}),console.log("‚ñ∂Ô∏è Ordem reativada:",e),await this.matchOrders(e),{success:!0}}catch(t){throw console.error("‚ùå Erro ao reativar ordem:",t),t}}async getCountryOrders(e,t=null){try{let a=s.collection(this.ordersCollection).where("country_id","==",e);return t&&(a=a.where("status","==",t)),(await a.orderBy("created_at","desc").get()).docs.map(o=>({id:o.id,...o.data()}))}catch(a){throw console.error("‚ùå Erro ao listar ordens:",a),a}}async getCountryTransactions(e,t=50){try{const a=await s.collection(this.transactionsCollection).where("seller_country_id","==",e).orderBy("executed_at","desc").limit(t).get(),r=await s.collection(this.transactionsCollection).where("buyer_country_id","==",e).orderBy("executed_at","desc").limit(t).get(),o=[...a.docs.map(c=>({id:c.id,type:"sell",...c.data()})),...r.docs.map(c=>({id:c.id,type:"buy",...c.data()}))];return o.sort((c,n)=>n.executed_at.toMillis()-c.executed_at.toMillis()),o.slice(0,t)}catch(a){throw console.error("‚ùå Erro ao buscar hist√≥rico de transa√ß√µes:",a),a}}}window.RecurringOrdersSystem=E;export{E as RecurringOrdersSystem};
