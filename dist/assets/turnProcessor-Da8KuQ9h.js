const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/recurringOrdersSystem-BLoLE0v5.js","assets/preload-helper-f85Crcwt.js","assets/firebase-ep1w8F7T.js","assets/utils-DLoRv3re.js","assets/resourceMapping-BBQTZbLj.js","assets/shipyardSystem-CBTksbsh.js"])))=>i.map(i=>d[i]);
import{_ as m}from"./preload-helper-f85Crcwt.js";import{db as d}from"./firebase-ep1w8F7T.js";import{L as u}from"./utils-DLoRv3re.js";import{C as g}from"./consumerGoodsCalculator-RQh-OK8I.js";import{t as h}from"./turnEventsSystem-CoA8kcmA.js";import{c as E}from"./lawAndExhaustionCalculator-COcnTsA2.js";import{B as $}from"./shipyardSystem-CBTksbsh.js";import"https://www.gstatic.com/firebasejs/10.12.2/firebase-app-compat.js";import"https://www.gstatic.com/firebasejs/10.12.2/firebase-auth-compat.js";import"https://www.gstatic.com/firebasejs/10.12.2/firebase-firestore-compat.js";import"https://www.gstatic.com/firebasejs/10.12.2/firebase-storage-compat.js";import"https://www.gstatic.com/firebasejs/10.12.2/firebase-functions-compat.js";import"./espionageOperationsSystem-Cysd5PTP.js";class A{static async processTurnEnd(o){try{u.info(`Iniciando processamento autom√°tico do turno ${o}`),console.log(`üîÑ PROCESSAMENTO AUTOM√ÅTICO DO TURNO ${o}`);const e=Date.now();let r=0;await this.initializeBudgetBreakdowns(o),await h.processTurnEvents(o),await this.processRecurringOrders(o),await this.processLawTransitions(o),await this.applyNationalLawEffects(o),await this.processDivisionRecruitment(o);const s=await d.collection("paises").get(),i=d.batch();return s.forEach(a=>{const t=a.data(),c=t.Pais||t.Nome||a.id;try{const n=g.applyStabilityEffect(t),l={...t,Estabilidade:n.newStability},p=g.calculateConsumerGoods(l),f={Estabilidade:n.newStability,BensDeConsumo:p.level,OrcamentoGasto:0,AgencyBudgetSpent:0,ProcessamentoTurno:{turno:o,timestamp:new Date().toISOString(),stabilityChange:n.stabilityEffect,previousStability:n.currentStability,newStability:n.newStability,consumerGoodsLevel:p.level}};i.update(a.ref,f),r++,Math.abs(n.stabilityEffect)>=2&&console.log(`${c}: Estabilidade ${n.currentStability}% ‚Üí ${n.newStability}% (${n.stabilityEffect>0?"+":""}${n.stabilityEffect}%)`)}catch(n){u.error(`Erro ao processar ${c} no turno ${o}:`,n)}}),r>0&&(await i.commit(),await this.saveTurnProcessingLog(o,r,e),u.info(`Turno ${o} processado: ${r} pa√≠ses atualizados`),console.log(`‚úÖ Turno ${o} processado: ${r} pa√≠ses atualizados em ${Date.now()-e}ms`)),{success:!0,processedCount:r,duration:Date.now()-e}}catch(e){throw u.error(`Erro no processamento do turno ${o}:`,e),console.error(`‚ùå Erro no processamento do turno ${o}:`,e),e}}static async processRecurringOrders(o){try{if(console.log(`üîÑ Processando ordens recorrentes do marketplace (Turno ${o})...`),!window.recurringOrdersSystem){const{RecurringOrdersSystem:r}=await m(async()=>{const{RecurringOrdersSystem:s}=await import("./recurringOrdersSystem-BLoLE0v5.js");return{RecurringOrdersSystem:s}},__vite__mapDeps([0,1,2,3,4,5]));window.recurringOrdersSystem=new r}await window.recurringOrdersSystem.matchOrders();const e=await window.recurringOrdersSystem.processTurnRecurringOrders(o);return console.log(`‚úÖ Ordens recorrentes processadas: ${e.executed} executadas, ${e.failed} falhas`),e}catch(e){return u.error(`Erro ao processar ordens recorrentes no turno ${o}:`,e),console.error("‚ùå Erro ao processar ordens recorrentes:",e),{executed:0,failed:0,error:e.message}}}static async processLawTransitions(o){try{console.log(`üèõÔ∏è Processando transi√ß√µes de leis (Turno ${o})...`);const e=await d.collection("paises").where("lawChange","!=",null).get();if(e.empty)return console.log("‚úÖ Nenhuma transi√ß√£o de lei em andamento."),{processed:0};const r=d.batch();let s=0;return e.forEach(i=>{const a=i.data(),t=a.lawChange;if(t){if(t.progress+=1,t.progress>=t.totalTurns){const c={[t.type+"Law"]:t.targetLaw,lawChange:null};r.update(i.ref,c),console.log(`‚úÖ ${a.Pais||i.id}: Transi√ß√£o para ${t.targetLaw} completa!`)}else r.update(i.ref,{lawChange:t}),console.log(`üîÑ ${a.Pais||i.id}: Transi√ß√£o ${t.progress}/${t.totalTurns}`);s++}}),s>0&&(await r.commit(),console.log(`‚úÖ ${s} transi√ß√µes de leis processadas.`)),{processed:s}}catch(e){return u.error(`Erro ao processar transi√ß√µes de leis no turno ${o}:`,e),console.error("‚ùå Erro ao processar transi√ß√µes de leis:",e),{processed:0,error:e.message}}}static async applyNationalLawEffects(o){try{console.log(`‚öôÔ∏è Aplicando efeitos de leis nacionais (Turno ${o})...`);const e=await d.collection("gameConfig").doc("nationalLaws").get();if(!e.exists)return console.warn("‚ö†Ô∏è Configura√ß√£o de leis nacionais n√£o encontrada."),{processed:0};const r=e.data(),s=await d.collection("paises").get();if(s.empty)return{processed:0};const i=d.batch();let a=0;return s.forEach(t=>{const c=t.data(),n=E(c,r);i.update(t.ref,{currentModifiers:n}),a++}),a>0&&(await i.commit(),console.log(`‚úÖ Efeitos de leis aplicados a ${a} pa√≠ses.`)),{processed:a}}catch(e){return u.error(`Erro ao aplicar efeitos de leis no turno ${o}:`,e),console.error("‚ùå Erro ao aplicar efeitos de leis:",e),{processed:0,error:e.message}}}static async saveTurnProcessingLog(o,e,r){try{const s={turno:o,timestamp:new Date().toISOString(),processedCount:e,duration:Date.now()-r,systems:["consumer_goods","stability_effects","recurring_orders","national_laws","law_transitions"],version:"1.2"};await d.collection("logs").doc(`turno_${o}_${Date.now()}`).set(s)}catch(s){u.error("Erro ao salvar log do processamento:",s)}}static async testTurnProcessing(o="TEST"){try{console.log(`üß™ TESTE DE PROCESSAMENTO DE TURNO ${o}`);const e=await d.collection("paises").get(),r=[];e.forEach(t=>{const c=t.data(),n=c.Pais||c.Nome||t.id;try{const l=g.applyStabilityEffect(c),p=g.calculateConsumerGoods(c);r.push({country:n,currentStability:l.currentStability,stabilityEffect:l.stabilityEffect,newStability:l.newStability,consumerGoodsLevel:p.level,effectDescription:l.effectDescription})}catch(l){console.error(`Erro no teste para ${n}:`,l)}});const s=r.filter(t=>Math.abs(t.stabilityEffect)>=2),i=r.filter(t=>t.stabilityEffect>0),a=r.filter(t=>t.stabilityEffect<0);return console.log(`
üìä RESUMO DO TESTE:`),console.log(`Total de pa√≠ses: ${r.length}`),console.log(`Mudan√ßas significativas (‚â•2%): ${s.length}`),console.log(`Efeitos positivos: ${i.length}`),console.log(`Efeitos negativos: ${a.length}`),s.length>0&&(console.log(`
‚ö° MUDAN√áAS SIGNIFICATIVAS:`),s.sort((t,c)=>Math.abs(c.stabilityEffect)-Math.abs(t.stabilityEffect)).slice(0,10).forEach(t=>{console.log(`${t.country}: ${t.currentStability}% ‚Üí ${t.newStability}% (${t.stabilityEffect>0?"+":""}${t.stabilityEffect}%)`)})),r}catch(e){throw console.error("Erro no teste de processamento:",e),e}}static async isTurnProcessed(o){try{return!(await d.collection("logs").where("turno","==",o).where("systems","array-contains","consumer_goods").limit(1).get()).empty}catch(e){return u.error("Erro ao verificar processamento do turno:",e),!1}}static async initializeBudgetBreakdowns(o){try{console.log(`üí∞ Inicializando budget breakdowns (Turno ${o})...`);const e=await d.collection("paises").get(),r=d.batch();let s=0;for(const i of e.docs){const a=i.data(),t=i.id,c=a.budgetBreakdown;if(!c||!c.turnInitialized){const n=$.calculateBase(a),l={base:n,additions:{},subtractions:{},available:n.calculated,lastUpdated:new Date().toISOString(),turnInitialized:!0,turnNumber:o};r.update(i.ref,{budgetBreakdown:l}),s++}}return s>0?(await r.commit(),console.log(`‚úÖ ${s} budget breakdowns inicializados.`)):console.log("‚úÖ Todos os budget breakdowns j√° estavam inicializados."),{initialized:s}}catch(e){return u.error(`Erro ao inicializar budget breakdowns no turno ${o}:`,e),console.error("‚ùå Erro ao inicializar budget breakdowns:",e),{initialized:0,error:e.message}}}static async processDivisionRecruitment(o){try{console.log(`üéñÔ∏è Processando recrutamento de divis√µes (Turno ${o})...`);const e=await d.collection("divisions").where("recruitmentStatus","==","recruiting").get();if(e.empty)return console.log("‚úÖ Nenhuma divis√£o em recrutamento."),{processed:0,ready:0};const r=d.batch();let s=0,i=0;return e.forEach(a=>{const t=a.data(),c=t.recruitment||{},n=c.currentTurn||0,l=c.totalTurns||1,p=c.progressPerTurn||1,f=n+1,y=Math.min(f*p,1);if(f>=l||y>=1)r.update(a.ref,{recruitmentStatus:"ready","recruitment.currentTurn":l,"recruitment.progress":1,"recruitment.completedAt":new Date().toISOString(),"recruitment.completedAtTurn":o}),i++,console.log(`‚úÖ ${t.name||a.id}: Divis√£o pronta! (${t.trainingLevel})`);else{r.update(a.ref,{"recruitment.currentTurn":f,"recruitment.progress":y});const w=(y*100).toFixed(0);console.log(`üîÑ ${t.name||a.id}: ${w}% (${f}/${l} turnos)`)}s++}),s>0&&(await r.commit(),console.log(`‚úÖ ${s} divis√µes processadas, ${i} prontas!`)),{processed:s,ready:i}}catch(e){return u.error(`Erro ao processar recrutamento de divis√µes no turno ${o}:`,e),console.error("‚ùå Erro ao processar recrutamento:",e),{processed:0,ready:0,error:e.message}}}static async reprocessTurn(o){try{return console.log(`üîÑ Reprocessando turno ${o}...`),await this.isTurnProcessed(o)&&console.log(`‚ö†Ô∏è Turno ${o} j√° foi processado. For√ßando reprocessamento...`),await this.processTurnEnd(o)}catch(e){throw console.error(`Erro ao reprocessar turno ${o}:`,e),e}}}export{A as default};
