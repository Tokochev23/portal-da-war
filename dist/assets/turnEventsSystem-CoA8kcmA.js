import{db as i}from"./firebase-ep1w8F7T.js";import{e as E,i as y}from"./espionageOperationsSystem-Cysd5PTP.js";import{S as v,B as d}from"./shipyardSystem-CBTksbsh.js";const m=new v;class f{constructor(){this.lastProcessedTurn=0}async processTurnEvents(o){if(o!==this.lastProcessedTurn){console.log(`[TurnEvents] Processando eventos do turno #${o}`);try{await this.progressAllEspionageOperations(o),await this.applyAllMaintenanceCosts(o),this.lastProcessedTurn=o,console.log(`[TurnEvents] Eventos do turno #${o} processados com sucesso`)}catch(t){console.error("[TurnEvents] Erro ao processar eventos do turno:",t)}}}async applyAllMaintenanceCosts(o){console.log(`[TurnEvents] Aplicando custos de manuten√ß√£o para o turno #${o}`);try{const t=await i.collection("paises").get();if(t.empty){console.log("[TurnEvents] Nenhum pa√≠s encontrado para aplicar manuten√ß√£o.");return}await m.applyMaintenanceCosts();for(const n of t.docs){const e=n.id,{vehicleMaintenance:a,fleetMaintenance:s}=await this.calculateInventoryMaintenance(e),r=await this.calculateDivisionMaintenance(e);a>0&&await d.addExpense(e,d.EXPENSE_CATEGORIES.VEHICLE_MAINTENANCE,a,"Manuten√ß√£o de ve√≠culos terrestres"),s>0&&await d.addExpense(e,d.EXPENSE_CATEGORIES.FLEET_MAINTENANCE,s,"Manuten√ß√£o da frota naval"),r>0&&await d.addExpense(e,d.EXPENSE_CATEGORIES.DIVISION_MAINTENANCE,r,"Manuten√ß√£o de divis√µes")}console.log("[TurnEvents] Custos de manuten√ß√£o aplicados com sucesso.")}catch(t){console.error("[TurnEvents] Erro ao aplicar custos de manuten√ß√£o:",t)}}async calculateInventoryMaintenance(o){let t=0,n=0;try{const e=await i.collection("inventory").doc(o).get();if(!e.exists)return{vehicleMaintenance:t,fleetMaintenance:n};const a=e.data();for(const s in a){const r=a[s];for(const l in r){const u=r[l],p=u.cost||0,c=u.quantity||0,g=p*.05*c;["Coura√ßados","Cruzadores","Destr√≥ieres","Fragatas","Corvetas","Submarinos","Porta-avi√µes"].includes(s)?n+=g:t+=g}}}catch(e){console.error(`[TurnEvents] Erro ao calcular manuten√ß√£o de invent√°rio para ${o}:`,e)}return{vehicleMaintenance:t,fleetMaintenance:n}}async calculateDivisionMaintenance(o){let t=0;try{const n=await i.collection("divisions").where("countryId","==",o).where("recruitmentStatus","==","ready").get();if(n.empty)return 0;n.forEach(e=>{const s=e.data().calculatedStats?.costs?.maintenance||0;s>0&&(t+=s)})}catch(n){console.error(`[TurnEvents] Erro ao calcular manuten√ß√£o de divis√µes para ${o}:`,n)}return t}async progressAllEspionageOperations(o){try{console.log("[TurnEvents] Progredindo opera√ß√µes de espionagem...");const t=await i.collection("espionage_operations").where("active","==",!0).get();if(t.empty){console.log("[TurnEvents] Nenhuma opera√ß√£o ativa encontrada");return}const n=t.docs.map(e=>({id:e.id,...e.data()}));console.log(`[TurnEvents] ${n.length} opera√ß√£o(√µes) ativa(s) encontrada(s)`);for(const e of n)try{const a=await i.collection("agencies").doc(e.agencyId).get();if(!a.exists){console.warn(`[TurnEvents] Ag√™ncia ${e.agencyId} n√£o encontrada`);continue}const s={id:a.id,...a.data()},r=await i.collection("paises").doc(e.spyCountryId).get(),l=await i.collection("paises").doc(e.targetCountryId).get();if(!r.exists||!l.exists){console.warn(`[TurnEvents] Pa√≠ses n√£o encontrados para opera√ß√£o ${e.id}`);continue}const u={id:r.id,...r.data()},p={id:l.id,...l.data()},c=await E.progressOperation(e.id,s,p,u,o);c.success&&(console.log(`[TurnEvents] Opera√ß√£o ${e.id} progredida: ${c.succeeded?"SUCESSO":"FALHA"} | Fase ${c.newPhase} | Progresso: ${Math.round(c.newProgress)}% | ${c.detected?"‚ö†Ô∏è DETECTADO":"‚úì N√£o detectado"}`),(c.succeeded||c.detected)&&await this.createOperationNotification(e,c,u))}catch(a){console.error(`[TurnEvents] Erro ao processar opera√ß√£o ${e.id}:`,a)}console.log("[TurnEvents] Todas as opera√ß√µes foram processadas")}catch(t){console.error("[TurnEvents] Erro ao buscar opera√ß√µes:",t)}}async createOperationNotification(o,t,n){try{const e={countryId:o.spyCountryId,type:"espionage_progress",title:t.detected?"‚ö†Ô∏è Opera√ß√£o Detectada!":"üïµÔ∏è Progresso de Espionagem",message:t.detected?`Sua opera√ß√£o em ${o.targetCountryName} foi detectada! Risco de exposi√ß√£o aumentado.`:t.succeeded?`Opera√ß√£o em ${o.targetCountryName} progrediu para Fase ${t.newPhase}. Intel: ${t.intelLevel}%`:`Opera√ß√£o em ${o.targetCountryName} n√£o progrediu neste turno.`,data:{operationId:o.id,targetCountry:o.targetCountryName,phase:t.newPhase,intelLevel:t.intelLevel,detected:t.detected,succeeded:t.succeeded},read:!1,createdAt:new Date().toISOString()};console.log("[TurnEvents] Notifica√ß√£o criada:",e.title)}catch(e){console.error("[TurnEvents] Erro ao criar notifica√ß√£o:",e)}}async updateAgencyBudgets(o){try{console.log("[TurnEvents] Atualizando or√ßamentos das ag√™ncias...");const t=await i.collection("agencies").get();for(const n of t.docs){const e={id:n.id,...n.data()},a=await i.collection("paises").doc(e.countryId).get();if(!a.exists)continue;const s={id:a.id,...a.data()},r=y.calculateBudget(s);r<e.budget&&console.warn(`[TurnEvents] ${s.Pais} n√£o tem or√ßamento suficiente para manter ag√™ncia (necess√°rio: $${e.budget}, dispon√≠vel: $${r})`)}}catch(t){console.error("[TurnEvents] Erro ao atualizar or√ßamentos:",t)}}init(o){this.lastProcessedTurn=o-1,console.log(`[TurnEvents] Sistema inicializado no turno #${o}`)}}const $=new f;export{$ as t};
