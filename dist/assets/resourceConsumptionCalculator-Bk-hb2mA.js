import{L as E}from"./utils-DLoRv3re.js";const r={BASE_CONSUMPTION_PER_MILLION:{Graos:150,Combustivel:50,Metais:30,Carvao:40,Energia:100},DEVELOPMENT_MULTIPLIERS:{ultraDeveloped:{threshold:2e3,multiplier:2.5},highlyDeveloped:{threshold:1200,multiplier:2},developed:{threshold:800,multiplier:1.5},moderate:{threshold:500,multiplier:1.2},developing:{threshold:200,multiplier:1},underdeveloped:{threshold:0,multiplier:.7}},URBANIZATION_MODIFIERS:{Combustivel:.02,Energia:.015,Graos:-.005,Metais:.01},INDUSTRIAL_MODIFIERS:{Combustivel:.03,Metais:.04,Carvao:.025,Energia:.02},TECHNOLOGY_EFFICIENCY:{Combustivel:.008,Metais:.006,Carvao:.01,Energia:.007,Graos:.004},CLIMATE_MODIFIERS:{cold:{Combustivel:1.4,Carvao:1.6},temperate:{Combustivel:1,Carvao:1},warm:{Combustivel:.8,Carvao:.6},hot:{Combustivel:.6,Carvao:.4}},MILITARY_MODIFIERS:{atWar:{Combustivel:2,Metais:1.8,Graos:1.3},mobilized:{Combustivel:1.4,Metais:1.3,Graos:1.2},peace:{Combustivel:1,Metais:1,Graos:1}}},I={cold:["URSS","Canadá","Finlândia","Suécia","Noruega","Islândia","Dinamarca","Polônia","Tchecoslováquia","Mongólia"],temperate:["Estados Unidos","Reino Unido","França","Alemanha","Itália","Espanha","Portugal","Holanda","Bélgica","Suíça","Áustria","Hungria","Romênia","Bulgária","Iugoslávia","Coreia do Sul","Coreia do Norte","Japão","China","Argentina","Chile","Uruguai"],warm:["Brasil","México","Venezuela","Colômbia","Equador","Peru","Bolívia","Paraguai","Guatemala","Cuba","Índia","Paquistão","Bangladesh","Birmânia","Tailândia","Vietnã","Filipinas","Indonésia","Malásia","Turquia","Síria","Líbano","Israel","Jordânia","Irã","Afeganistão","Marrocos","Argélia","Tunísia"],hot:["Arábia Saudita","Kuwait","Iraque","Líbia","Egito","Sudão","Etiópia","Quênia","Tanzânia","Somália","Chade","Nigéria","Mali","Níger","Austrália","Sri Lanka","Emirados Árabes Unidos"]};class S{static calculateCountryConsumption(e){try{const a=parseFloat(e.Populacao)||1,i=parseFloat(e.PIBPerCapita)||500,s=parseFloat(e.Urbanizacao)||30,t=parseFloat(e.Tecnologia)||20,n=e.Pais||e.Nome||"Desconhecido",u=this.calculateBaseConsumption(a),c=this.getDevelopmentMultiplier(i),m=this.calculateUrbanizationModifiers(s),v=this.calculateIndustrialModifiers(t),C=this.calculateTechnologyEfficiency(t),M=this.getClimateModifiers(n),p=r.MILITARY_MODIFIERS.peace,d={};return["Graos","Combustivel","Metais","Carvao","Energia"].forEach(o=>{let l=u[o]*c;if(m[o]&&(l*=m[o]),v[o]&&(l*=v[o]),C[o]&&(l*=C[o]),M[o]&&(l*=M[o]),p[o]&&(l*=p[o]),e.currentModifiers&&e.currentModifiers.consumptionModifiers&&e.currentModifiers.consumptionModifiers[o.toLowerCase()]){const h=1+e.currentModifiers.consumptionModifiers[o.toLowerCase()];l*=h}d[o]=Math.round(l)}),d._metadata={population:a,pibPerCapita:i,developmentLevel:this.getDevelopmentLevel(i),climateZone:this.getClimateZone(n),devMultiplier:c,calculatedAt:new Date().toISOString()},d}catch(a){return E.error(`Erro ao calcular consumo para ${e.Pais}:`,a),this.getDefaultConsumption()}}static calculateBaseConsumption(e){const a=e/1e6,i=r.BASE_CONSUMPTION_PER_MILLION;return{Graos:Math.round(i.Graos*a),Combustivel:Math.round(i.Combustivel*a),Metais:Math.round(i.Metais*a),Carvao:Math.round(i.Carvao*a),Energia:Math.round(i.Energia*a)}}static getDevelopmentMultiplier(e){const a=r.DEVELOPMENT_MULTIPLIERS;return e>=a.ultraDeveloped.threshold?a.ultraDeveloped.multiplier:e>=a.highlyDeveloped.threshold?a.highlyDeveloped.multiplier:e>=a.developed.threshold?a.developed.multiplier:e>=a.moderate.threshold?a.moderate.multiplier:e>=a.developing.threshold?a.developing.multiplier:a.underdeveloped.multiplier}static calculateUrbanizationModifiers(e){const a=r.URBANIZATION_MODIFIERS;return{Combustivel:1+a.Combustivel*e,Energia:1+a.Energia*e,Graos:1+a.Graos*e,Metais:1+a.Metais*e}}static calculateIndustrialModifiers(e){const a=r.INDUSTRIAL_MODIFIERS;return{Combustivel:1+a.Combustivel*e,Metais:1+a.Metais*e,Carvao:1+a.Carvao*e,Energia:1+a.Energia*e}}static calculateTechnologyEfficiency(e){const a=r.TECHNOLOGY_EFFICIENCY;return{Graos:1-a.Graos*e,Combustivel:1-a.Combustivel*e,Metais:1-a.Metais*e,Carvao:1-a.Carvao*e,Energia:1-a.Energia*e}}static getClimateModifiers(e){const a=this.getClimateZone(e);return r.CLIMATE_MODIFIERS[a]||r.CLIMATE_MODIFIERS.temperate}static getClimateZone(e){for(const[a,i]of Object.entries(I))if(i.includes(e))return a;return"temperate"}static getDevelopmentLevel(e){const a=r.DEVELOPMENT_MULTIPLIERS;return e>=a.ultraDeveloped.threshold?"Ultradesenvolvido":e>=a.highlyDeveloped.threshold?"Altamente desenvolvido":e>=a.developed.threshold?"Desenvolvido":e>=a.moderate.threshold?"Moderadamente desenvolvido":e>=a.developing.threshold?"Em desenvolvimento":"Subdesenvolvido"}static getDefaultConsumption(){return{Graos:100,Combustivel:50,Metais:30,Carvao:40,Energia:80,_metadata:{note:"Valores padrão aplicados devido a dados insuficientes"}}}static calculateResourceBalance(e){const a=this.calculateCountryConsumption(e),i={Graos:parseFloat(e.Graos)||0,Combustivel:parseFloat(e.Combustivel)||0,Metais:parseFloat(e.Metais)||0,Carvao:parseFloat(e.CarvaoSaldo)||0,Energia:parseFloat(e.EnergiaCapacidade)||0},s={};return Object.keys(i).forEach(t=>{const n=i[t],u=a[t];s[t]={stock:n,consumption:u,balance:n-u,monthsRemaining:u>0?Math.floor(n/u):999}}),s}static generateConsumptionReport(e){const a=this.calculateCountryConsumption(e),i=this.calculateResourceBalance(e);return{country:e.Pais||"Desconhecido",consumption:a,balance:i,summary:{totalResources:Object.values(a).slice(0,5).reduce((s,t)=>s+t,0),criticalResources:Object.entries(i).filter(([s,t])=>t.monthsRemaining<3).map(([s,t])=>s),surplusResources:Object.entries(i).filter(([s,t])=>t.balance>100).map(([s,t])=>s)}}}}export{S as R};
