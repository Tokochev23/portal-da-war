const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/recurringOrdersSystem-BpJp6SUZ.js","assets/firebase-BARDcBiw.js","assets/preload-helper-f85Crcwt.js","assets/resourceMapping-CNM62YsJ.js"])))=>i.map(i=>d[i]);
import{_ as u}from"./preload-helper-f85Crcwt.js";import{L as i,h as d}from"./firebase-BARDcBiw.js";import{C as p}from"./consumerGoodsCalculator-Bg6C08yH.js";import{t as E}from"./turnEventsSystem-hr3kPmn_.js";import"https://www.gstatic.com/firebasejs/10.12.2/firebase-app-compat.js";import"https://www.gstatic.com/firebasejs/10.12.2/firebase-auth-compat.js";import"https://www.gstatic.com/firebasejs/10.12.2/firebase-firestore-compat.js";import"https://www.gstatic.com/firebasejs/10.12.2/firebase-storage-compat.js";import"./espionageOperationsSystem-yA0URGjb.js";class P{static async processTurnEnd(t){try{i.info(`Iniciando processamento autom√°tico do turno ${t}`),console.log(`üîÑ PROCESSAMENTO AUTOM√ÅTICO DO TURNO ${t}`);const o=Date.now();let s=0;await E.processTurnEvents(t),await this.processRecurringOrders(t);const a=await d.collection("paises").get(),f=d.batch();return a.forEach(l=>{const e=l.data(),n=e.Pais||e.Nome||l.id;try{const r=p.applyStabilityEffect(e),c={...e,Estabilidade:r.newStability},y=p.calculateConsumerGoods(c),g={Estabilidade:r.newStability,BensDeConsumo:y.level,OrcamentoGasto:0,AgencyBudgetSpent:0,ProcessamentoTurno:{turno:t,timestamp:new Date().toISOString(),stabilityChange:r.stabilityEffect,previousStability:r.currentStability,newStability:r.newStability,consumerGoodsLevel:y.level}};f.update(l.ref,g),s++,Math.abs(r.stabilityEffect)>=2&&console.log(`${n}: Estabilidade ${r.currentStability}% ‚Üí ${r.newStability}% (${r.stabilityEffect>0?"+":""}${r.stabilityEffect}%)`)}catch(r){i.error(`Erro ao processar ${n} no turno ${t}:`,r)}}),s>0&&(await f.commit(),await this.saveTurnProcessingLog(t,s,o),i.info(`Turno ${t} processado: ${s} pa√≠ses atualizados`),console.log(`‚úÖ Turno ${t} processado: ${s} pa√≠ses atualizados em ${Date.now()-o}ms`)),{success:!0,processedCount:s,duration:Date.now()-o}}catch(o){throw i.error(`Erro no processamento do turno ${t}:`,o),console.error(`‚ùå Erro no processamento do turno ${t}:`,o),o}}static async processRecurringOrders(t){try{if(console.log(`üîÑ Processando ordens recorrentes do marketplace (Turno ${t})...`),!window.recurringOrdersSystem){const{RecurringOrdersSystem:s}=await u(async()=>{const{RecurringOrdersSystem:a}=await import("./recurringOrdersSystem-BpJp6SUZ.js");return{RecurringOrdersSystem:a}},__vite__mapDeps([0,1,2,3]));window.recurringOrdersSystem=new s}await window.recurringOrdersSystem.matchOrders();const o=await window.recurringOrdersSystem.processTurnRecurringOrders(t);return console.log(`‚úÖ Ordens recorrentes processadas: ${o.executed} executadas, ${o.failed} falhas`),o}catch(o){return i.error(`Erro ao processar ordens recorrentes no turno ${t}:`,o),console.error("‚ùå Erro ao processar ordens recorrentes:",o),{executed:0,failed:0,error:o.message}}}static async saveTurnProcessingLog(t,o,s){try{const a={turno:t,timestamp:new Date().toISOString(),processedCount:o,duration:Date.now()-s,systems:["consumer_goods","stability_effects","recurring_orders"],version:"1.1"};await d.collection("logs").doc(`turno_${t}_${Date.now()}`).set(a)}catch(a){i.error("Erro ao salvar log do processamento:",a)}}static async testTurnProcessing(t="TEST"){try{console.log(`üß™ TESTE DE PROCESSAMENTO DE TURNO ${t}`);const o=await d.collection("paises").get(),s=[];o.forEach(e=>{const n=e.data(),r=n.Pais||n.Nome||e.id;try{const c=p.applyStabilityEffect(n),y=p.calculateConsumerGoods(n);s.push({country:r,currentStability:c.currentStability,stabilityEffect:c.stabilityEffect,newStability:c.newStability,consumerGoodsLevel:y.level,effectDescription:c.effectDescription})}catch(c){console.error(`Erro no teste para ${r}:`,c)}});const a=s.filter(e=>Math.abs(e.stabilityEffect)>=2),f=s.filter(e=>e.stabilityEffect>0),l=s.filter(e=>e.stabilityEffect<0);return console.log(`
üìä RESUMO DO TESTE:`),console.log(`Total de pa√≠ses: ${s.length}`),console.log(`Mudan√ßas significativas (‚â•2%): ${a.length}`),console.log(`Efeitos positivos: ${f.length}`),console.log(`Efeitos negativos: ${l.length}`),a.length>0&&(console.log(`
‚ö° MUDAN√áAS SIGNIFICATIVAS:`),a.sort((e,n)=>Math.abs(n.stabilityEffect)-Math.abs(e.stabilityEffect)).slice(0,10).forEach(e=>{console.log(`${e.country}: ${e.currentStability}% ‚Üí ${e.newStability}% (${e.stabilityEffect>0?"+":""}${e.stabilityEffect}%)`)})),s}catch(o){throw console.error("Erro no teste de processamento:",o),o}}static async isTurnProcessed(t){try{return!(await d.collection("logs").where("turno","==",t).where("systems","array-contains","consumer_goods").limit(1).get()).empty}catch(o){return i.error("Erro ao verificar processamento do turno:",o),!1}}static async reprocessTurn(t){try{return console.log(`üîÑ Reprocessando turno ${t}...`),await this.isTurnProcessed(t)&&console.log(`‚ö†Ô∏è Turno ${t} j√° foi processado. For√ßando reprocessamento...`),await this.processTurnEnd(t)}catch(o){throw console.error(`Erro ao reprocessar turno ${t}:`,o),o}}}export{P as default};
