const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/turnProcessor-Da8KuQ9h.js","assets/preload-helper-f85Crcwt.js","assets/utils-DLoRv3re.js","assets/consumerGoodsCalculator-RQh-OK8I.js","assets/turnEventsSystem-CoA8kcmA.js","assets/espionageOperationsSystem-Cysd5PTP.js","assets/shipyardSystem-CBTksbsh.js","assets/lawAndExhaustionCalculator-COcnTsA2.js"])))=>i.map(i=>d[i]);
import{_ as A}from"./preload-helper-f85Crcwt.js";import{L as i,s as y,V as g,g as d,F as E}from"./utils-DLoRv3re.js";import"https://www.gstatic.com/firebasejs/10.12.2/firebase-app-compat.js";import"https://www.gstatic.com/firebasejs/10.12.2/firebase-auth-compat.js";import"https://www.gstatic.com/firebasejs/10.12.2/firebase-firestore-compat.js";import"https://www.gstatic.com/firebasejs/10.12.2/firebase-storage-compat.js";import"https://www.gstatic.com/firebasejs/10.12.2/firebase-functions-compat.js";const f={apiKey:window.FIREBASE_API_KEY||"AIzaSyBd-cQsmXqgU9wVDtxYdaeLFQIfIUxv6GE",authDomain:window.FIREBASE_AUTH_DOMAIN||"war-1954-1799c.firebaseapp.com",projectId:window.FIREBASE_PROJECT_ID||"war-1954-1799c",storageBucket:window.FIREBASE_STORAGE_BUCKET||"war-1954-1799c.firebasestorage.app",messagingSenderId:window.FIREBASE_MESSAGING_SENDER_ID||"147967902110",appId:window.FIREBASE_APP_ID||"1:147967902110:web:2e2a54b98ef9474d7a968f",measurementId:window.FIREBASE_MEASUREMENT_ID||"G-LQNDE985RB",databaseURL:window.FIREBASE_DATABASE_URL||void 0};function R(o){const e=["apiKey","authDomain","projectId"];for(const a of e)if(!o[a])throw new Error(`Configuração Firebase inválida: ${a} é obrigatório`);return o}if(!f.databaseURL&&f.projectId)try{const o=f.projectId;f.databaseURL=`https://${o}-default-rtdb.firebaseio.com/`}catch{}const L=R(f),v={maxLoginAttempts:3,rateLimiting:{windowMs:900*1e3}};let T,p,n,D,u,P=new Map;class l{static getErrorMessage(e){const a={"auth/user-not-found":"Usuário não encontrado. Verifique o email.","auth/wrong-password":"Senha incorreta. Tente novamente.","auth/email-already-in-use":"Este email já está em uso.","auth/weak-password":"A senha é muito fraca. Use pelo menos 6 caracteres.","auth/invalid-email":"Email inválido. Verifique o formato.","auth/too-many-requests":"Muitas tentativas. Tente novamente mais tarde.","auth/network-request-failed":"Erro de conexão. Verifique sua internet.","permission-denied":"Acesso negado. Verifique suas permissões.",unavailable:"Serviço temporariamente indisponível.",cancelled:"Operação cancelada.","deadline-exceeded":"Tempo limite excedido. Tente novamente.","not-found":"Documento não encontrado.","already-exists":"Documento já existe.","resource-exhausted":"Limite de requisições excedido.","failed-precondition":"Condição prévia falhou.",aborted:"Operação abortada.","out-of-range":"Valor fora do intervalo permitido.",unimplemented:"Funcionalidade não implementada.",internal:"Erro interno do servidor.","data-loss":"Perda de dados detectada."},r=e.code||e.message;return a[r]||`Erro: ${e.message||"Erro desconhecido"}`}static handleError(e,a="operação"){const r=this.getErrorMessage(e);return i.error(`Firebase ${a} failed:`,e),y("error",r,{duration:6e3}),{success:!1,error:e,message:r}}}function w(o){const e=Date.now(),r=(P.get(o)||[]).filter(t=>e-t<v.rateLimiting.windowMs);if(r.length>=v.maxLoginAttempts)throw new Error("too-many-requests");r.push(e),P.set(o,r)}try{u=window.firebase,T=u.initializeApp(L),p=u.auth(),n=u.firestore(),D=u.storage(),n.enablePersistence({synchronizeTabs:!0}).catch(o=>i.warn("Não foi possível habilitar persistência:",o)),i.info("Firebase inicializado com sucesso")}catch(o){i.error("Erro crítico ao inicializar Firebase:",o),y("error","Erro crítico: Não foi possível conectar ao servidor. Recarregue a página.",{persistent:!0})}const h=new u.auth.GoogleAuthProvider;h.addScope("profile");h.addScope("email");window.db=n;window.auth=p;async function S(){try{w("google-login");const e=(await p.signInWithPopup(h)).user;if(!e.email||!g.isValidEmail(e.email))throw new Error("Email inválido recebido do Google");return await n.collection("usuarios").doc(e.uid).set({nome:g.sanitizeInput(e.displayName||"Usuário",{maxLength:100}),email:e.email.toLowerCase(),photoURL:e.photoURL||null,papel:"jogador",dataIngresso:u.firestore.Timestamp.now(),ultimoLogin:u.firestore.Timestamp.now(),ativo:!0,versaoTermos:"1.0"},{merge:!0}),i.info("Login Google realizado com sucesso",{uid:e.uid,email:e.email}),{success:!0,user:e}}catch(o){return l.handleError(o,"login com Google")}}async function U(o,e,a){try{if(!g.isValidEmail(o))throw new Error("invalid-email");if(!g.isStrongPassword(e))throw new Error("weak-password");const r=g.sanitizeInput(a,{maxLength:100});if(!r||r.length<2)throw new Error("Nome deve ter pelo menos 2 caracteres");w(o.toLowerCase());const s=(await p.createUserWithEmailAndPassword(o.toLowerCase(),e)).user;return await s.updateProfile({displayName:r}),await n.collection("usuarios").doc(s.uid).set({nome:r,email:o.toLowerCase(),papel:"jogador",dataIngresso:u.firestore.Timestamp.now(),ultimoLogin:u.firestore.Timestamp.now(),ativo:!0,versaoTermos:"1.0",configuracoes:{notificacoes:!0,tema:"dark"}}),i.info("Registro realizado com sucesso",{uid:s.uid,email:s.email}),{success:!0,user:s}}catch(r){return l.handleError(r,"registro")}}async function $(o,e){try{if(!g.isValidEmail(o))throw new Error("invalid-email");if(!e||e.length<6)throw new Error("wrong-password");w(o.toLowerCase());const a=await p.signInWithEmailAndPassword(o.toLowerCase(),e);try{await n.collection("usuarios").doc(a.user.uid).update({ultimoLogin:u.firestore.Timestamp.now()})}catch(r){i.warn("Não foi possível atualizar último login:",r)}return i.info("Login realizado com sucesso",{uid:a.user.uid,email:a.user.email}),{success:!0,user:a.user}}catch(a){return l.handleError(a,"login")}}async function F(o,e){if(!o||!e){const a=new Error("userId e paisId são obrigatórios");return l.handleError(a,"vinculação jogador-país")}try{const a=await n.collection("paises").doc(e).get();if(!a.exists)throw new Error("País não encontrado");if(a.data().Player)throw new Error("País já possui um jogador");return await n.runTransaction(async t=>{t.update(n.collection("paises").doc(e),{Player:o,DataVinculacao:u.firestore.Timestamp.now()}),t.set(n.collection("usuarios").doc(o),{paisId:e,papel:"jogador",ultimaAtualizacao:u.firestore.Timestamp.now(),ativo:!0},{merge:!0})}),d.clear(),i.info("Jogador vinculado ao país com sucesso",{userId:o,paisId:e}),{success:!0}}catch(a){return l.handleError(a,"vinculação jogador-país")}}async function b(o,e=!0){if(!o)return i.warn("checkUserPermissions: userId é obrigatório"),{isNarrator:!1,isAdmin:!1,isPlayer:!0};const a=`permissions-${o}`;try{if(e){const s=d.get(a);if(s)return i.debug(`Permissões do usuário ${o} carregadas do cache`),s}const r=await n.collection("usuarios").doc(o).get();let t={isNarrator:!1,isAdmin:!1,isPlayer:!0,role:"jogador"};if(r.exists){const s=r.data(),c=s.papel||"jogador";t={isNarrator:c==="narrador"||c==="admin",isAdmin:c==="admin",isPlayer:c==="jogador"||c==="narrador"||c==="admin",role:c,ativo:s.ativo!==!1}}return d.set(a,t,6e5),i.debug(`Permissões verificadas para ${o}:`,t),t}catch(r){return i.error("Erro ao verificar permissões:",r),{isNarrator:!1,isAdmin:!1,isPlayer:!0,role:"jogador"}}}async function B(o,e=!0){if(!o)return i.warn("checkPlayerCountry: userId é obrigatório"),null;const a=`player-country-${o}`;try{if(e){const s=d.get(a);if(s!==null)return i.debug(`País do jogador ${o} carregado do cache: ${s}`),s}const r=await n.collection("usuarios").doc(o).get();let t=null;return r.exists&&(t=r.data().paisId||null),d.set(a,t,3e5),i.debug(`País do jogador ${o}: ${t||"nenhum"}`),t}catch(r){return i.error("Erro ao verificar país do jogador:",r),null}}async function G(o=!0){const e="available-countries";try{if(o){const s=d.get(e);if(s)return i.debug("Países disponíveis carregados do cache"),s}const t=(await n.collection("paises").where("Player","in",[null,"",void 0]).get()).docs.map(s=>{const c=s.data();return{id:s.id,...c,Pais:g.sanitizeInput(c.Pais||"",{maxLength:100})}}).filter(s=>s.Pais&&s.PIB!==void 0);return d.set(e,t,18e4),i.info(`${t.length} países disponíveis encontrados`),t}catch(a){return l.handleError(a,"busca de países disponíveis"),[]}}async function M(o=!0){const e="all-countries";try{if(o){const s=d.get(e);if(s)return i.debug("Países carregados do cache"),s}const r=await n.collection("paises").get();if(r.empty)return i.warn("Nenhum país encontrado na coleção"),[];const t=r.docs.map(s=>{const c=s.data(),m={id:s.id,...c,Pais:g.sanitizeInput(c.Pais||"",{maxLength:100}),PIB:Math.max(0,E.parseNumber(c.PIB)||0)};if(m.Carvao===void 0&&(m.Carvao=0),m.PotencialCarvao===void 0)switch(m.Pais){case"Alemanha":m.PotencialCarvao=10;break;case"Reino Unido":m.PotencialCarvao=9;break;case"Brasil":m.PotencialCarvao=4;break;default:m.PotencialCarvao=5}return m.power_plants===void 0&&(m.power_plants=[]),m.PotencialHidreletrico===void 0&&(m.PotencialHidreletrico=5),m});return d.set(e,t,3e5),i.info(`${t.length} países carregados com sucesso`),t}catch(a){return l.handleError(a,"carregamento de países"),[]}}async function V(o,e=!0){if(!o)return i.warn("getCountryData: paisId é obrigatório"),null;const a=`country-${o}`;try{if(e){const c=d.get(a);if(c)return i.debug(`Dados do país ${o} carregados do cache`),c}const r=await n.collection("paises").doc(o).get();if(!r.exists)return i.warn(`País ${o} não encontrado`),null;const t=r.data(),s={...t,Pais:g.sanitizeInput(t.Pais||"",{maxLength:100}),PIB:Math.max(0,E.parseNumber(t.PIB)||0),Estabilidade:Math.max(0,Math.min(100,E.parseNumber(t.Estabilidade)||0))};return d.set(a,s,18e4),i.debug(`Dados do país ${o} carregados com sucesso`),s}catch(r){return l.handleError(r,`carregamento do país ${o}`),null}}async function k(o=!0){const e="game-config";try{if(o){const t=d.get(e);if(t)return i.debug("Configuração do jogo carregada do cache"),t}const a=await n.collection("configuracoes").doc("jogo").get();let r=null;return a.exists&&(r=a.data(),r.turnoAtual!==void 0&&(r.turnoAtual=Math.max(0,parseInt(r.turnoAtual)||0))),d.set(e,r,12e4),i.debug("Configuração do jogo carregada:",r),r}catch(a){return i.error("Erro ao carregar configuração do jogo:",a),null}}async function q(){try{const o=await n.collection("configuracoes").doc("regrasDinamicas").get();return o.exists?(i.debug("Regras dinâmicas carregadas do Firestore"),o.data()):(i.debug("Nenhum documento de regras dinâmicas encontrado, usando objeto vazio."),{})}catch(o){return l.handleError(o,"carregamento de regras dinâmicas"),{}}}async function K(o,e=null){try{if(typeof o!="object"||o===null)throw new Error("Objeto de regras inválido.");if(e){const r=await b(e,!1);if(!r.isNarrator&&!r.isAdmin)throw new Error("Acesso negado: apenas narradores podem salvar regras.")}const a={...o,ultimaAtualizacao:u.firestore.Timestamp.now(),ultimoEditor:e||"desconhecido"};return await n.collection("configuracoes").doc("regrasDinamicas").set(a),d.clear(),i.info("Regras dinâmicas salvas com sucesso",{userId:e}),y("success","Conjunto de regras customizadas foi salvo!"),{success:!0}}catch(a){return l.handleError(a,"salvamento de regras dinâmicas")}}async function W(o,e=null){try{const a=parseInt(o);if(isNaN(a)||a<0)throw new Error("Número do turno inválido");if(e){const t=await b(e,!1);if(!t.isNarrator&&!t.isAdmin)throw new Error("Acesso negado: apenas narradores podem atualizar turnos")}const r={turnoAtual:a,ultimaAtualizacao:u.firestore.Timestamp.now()};e&&(r.ultimoEditor=e),await n.collection("configuracoes").doc("jogo").set(r,{merge:!0});try{const{default:t}=await A(async()=>{const{default:c}=await import("./turnProcessor-Da8KuQ9h.js");return{default:c}},__vite__mapDeps([0,1,2,3,4,5,6,7]));if(await t.isTurnProcessed(a))i.info(`Turno ${a} já foi processado anteriormente`);else{i.info(`Iniciando processamento automático do turno ${a}`);const c=await t.processTurnEnd(a);i.info(`Processamento do turno ${a} concluído`,c)}}catch(t){i.error("Erro no processamento automático do turno:",t),console.warn("⚠️ Erro no processamento automático, mas turno foi atualizado")}return d.clear(),i.info(`Turno atualizado para #${a}`,{userId:e,newTurn:a}),{success:!0,turno:a}}catch(a){return l.handleError(a,"atualização de turno")}}async function O(){try{w("google-login");const e=(await p.signInWithPopup(h)).user;if(!e.email||!g.isValidEmail(e.email))throw new Error("Email inválido recebido do Google");const a=n.collection("usuarios").doc(e.uid),r=await a.get(),t={nome:g.sanitizeInput(e.displayName||"Usuário",{maxLength:100}),email:e.email.toLowerCase(),photoURL:e.photoURL||null,ultimoLogin:u.firestore.Timestamp.now(),ativo:!0,versaoTermos:"1.0"};return r.exists?(r.data()||{}).papel||(t.papel="jogador"):(t.dataIngresso=u.firestore.Timestamp.now(),t.papel="jogador"),await a.set(t,{merge:!0}),i.info("Login Google (preservando papel) realizado com sucesso",{uid:e.uid,email:e.email}),{success:!0,user:e}}catch(o){return l.handleError(o,"login com Google (preservar papel)")}}async function J(o,e){if(!o||!e){const a=new Error("userId e paisId são obrigatórios");return l.handleError(a,"vinculação jogador-país (preservar papel)")}try{const a=await n.collection("paises").doc(e).get();if(!a.exists)throw new Error("País não encontrado");if(a.data().Player)throw new Error("País já possui um jogador");return await n.runTransaction(async t=>{t.update(n.collection("paises").doc(e),{Player:o,DataVinculacao:u.firestore.Timestamp.now()}),t.set(n.collection("usuarios").doc(o),{paisId:e,ultimaAtualizacao:u.firestore.Timestamp.now(),ativo:!0},{merge:!0})}),d.clear(),i.info("Jogador vinculado ao país (preservando papel) com sucesso",{userId:o,paisId:e}),{success:!0}}catch(a){return l.handleError(a,"vinculação jogador-país (preservar papel)")}}export{T as app,p as auth,B as checkPlayerCountry,b as checkUserPermissions,n as db,M as getAllCountries,G as getAvailableCountries,V as getCountryData,q as getCustomRules,k as getGameConfig,h as googleProvider,U as registerWithEmailPassword,K as saveCustomRules,$ as signInWithEmailPassword,S as signInWithGoogle,O as signInWithGooglePreserveRole,D as storage,W as updateTurn,F as vincularJogadorAoPais,J as vincularJogadorAoPaisSemRebaixar};
